/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xyz.reks.gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;
import xyz.DbOperations.DbAuthentication;
import xyz.DbOperations.DbInstructions;
import xyz.testControl.TestEntity;

/**
 *
 * @author alewicki1990
 */
public class MainJFrame extends javax.swing.JFrame {

    private final Color PINK = new Color(253, 204, 204, 253);
    private final Color DARK_GRAY = new Color(51, 51, 51, 255);
    private final Color WILLOW_GREEN = new Color(131, 207, 68, 255);
    private final Color LIGHT_GREY = new Color(204, 204, 204, 255);
    private final Color RED = new Color(255, 0, 0, 255);
    private final Color WHITE = new Color(255, 255, 255, 255);
    private final Color GRAY = new Color(102, 102, 102, 255);

    private DbInstructions dbStatements = null;
    private TestEntity test = null;
    private Timer timer = null;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bgChooseLanguageOrderInFile = new javax.swing.ButtonGroup();
        jpnlBg = new javax.swing.JPanel();
        jpnlMain = new javax.swing.JPanel();
        jpnlSignIn = new javax.swing.JPanel();
        jllSILogin = new javax.swing.JLabel();
        jtfSIUsername = new javax.swing.JTextField();
        jsSISeparator1 = new javax.swing.JSeparator();
        jlSIPass = new javax.swing.JLabel();
        jpfSIPass = new javax.swing.JPasswordField();
        jsSISeparator2 = new javax.swing.JSeparator();
        jlSICreaAcc = new javax.swing.JLabel();
        jlSIRecAcc = new javax.swing.JLabel();
        jtfSIError = new javax.swing.JTextField();
        jbSILogin = new javax.swing.JButton();
        jpnlLoader = new javax.swing.JPanel();
        jlLLoadGif = new javax.swing.JLabel();
        jlLLoadinginfo = new javax.swing.JLabel();
        jpnlMenu = new javax.swing.JPanel();
        jbMSelectTest = new javax.swing.JButton();
        jbMTestCreator = new javax.swing.JButton();
        jbMLogout = new javax.swing.JButton();
        jpnlCreateEditTest = new javax.swing.JPanel();
        jspCETTestContent = new javax.swing.JScrollPane();
        jtCETTestContent = new javax.swing.JTable();
        jpnlCETTestName = new javax.swing.JPanel();
        jtfCETSelectedTestName = new javax.swing.JTextField();
        jlCETSelectedTestName = new javax.swing.JLabel();
        jlCETNewTestName = new javax.swing.JLabel();
        jtfCETNewTestName = new javax.swing.JTextField();
        jbCETChangeTestNAme = new javax.swing.JButton();
        jpnlCETAddEditWord = new javax.swing.JPanel();
        jtfCETPlWord = new javax.swing.JTextField();
        jlCETEngWord = new javax.swing.JLabel();
        jlCETPlWord = new javax.swing.JLabel();
        jtfCETEngWord = new javax.swing.JTextField();
        jbCETAddEditWords = new javax.swing.JButton();
        jbCETDeleteWords = new javax.swing.JButton();
        jpnlCETMenu = new javax.swing.JPanel();
        jbCETSaveTest = new javax.swing.JButton();
        jbCETReturnToTestList = new javax.swing.JButton();
        jbCETExportTest = new javax.swing.JButton();
        jbCETReturnToMainMenu = new javax.swing.JButton();
        jbCETDiscardChg = new javax.swing.JButton();
        jspCETInfo = new javax.swing.JScrollPane();
        jtaCETInfo = new javax.swing.JTextArea();
        jspCETInsertWordsFromFile = new javax.swing.JPanel();
        jrbCETFirstPl = new javax.swing.JRadioButton();
        jrbCETFirstEng = new javax.swing.JRadioButton();
        jbCETInsertWordListFromFile = new javax.swing.JButton();
        jpnlChooseTest = new javax.swing.JPanel();
        jspCTSelectedTestWords = new javax.swing.JScrollPane();
        jtCTSelectedTestContent = new javax.swing.JTable();
        jtfCTTestActiveDate = new javax.swing.JTextField();
        jlCTTestActiveDate = new javax.swing.JLabel();
        jlCTSelectedTest = new javax.swing.JLabel();
        jspCTTestList = new javax.swing.JScrollPane();
        jtCTTestList = new javax.swing.JTable();
        jlCTTestList = new javax.swing.JLabel();
        jlCTTestContent = new javax.swing.JLabel();
        jtfCTTestName = new javax.swing.JTextField();
        jbCTStartTest = new javax.swing.JButton();
        jbCTReturnToMainMenu = new javax.swing.JButton();
        jpnlTest = new javax.swing.JPanel();
        jsTAbove = new javax.swing.JSeparator();
        jtfTNumOfRecToFin = new javax.swing.JLabel();
        jtfTCountNumOfRecToFin = new javax.swing.JTextField();
        jtfTTimeLeft = new javax.swing.JLabel();
        jtfTTimeLeftTimer = new javax.swing.JTextField();
        jtfTNumOfRec = new javax.swing.JLabel();
        jtfTCountNumOfRec = new javax.swing.JTextField();
        jtfTNumOfMist = new javax.swing.JLabel();
        jtfTCountNumOfMist = new javax.swing.JTextField();
        jtfTTimeSpend = new javax.swing.JLabel();
        jtfTTimeSpendTimer = new javax.swing.JTextField();
        jlTPlWord = new javax.swing.JLabel();
        jtfTPlWord = new javax.swing.JTextField();
        jsTUnderEngWord = new javax.swing.JSeparator();
        jlTEngWord = new javax.swing.JLabel();
        jtfTEngWord = new javax.swing.JTextField();
        jsTUnderPlWord = new javax.swing.JSeparator();
        jtfTInfo = new javax.swing.JTextField();
        jbTReturnToMainMenu = new javax.swing.JButton();
        jsTBelow = new javax.swing.JSeparator();
        jpnlTestListChg = new javax.swing.JPanel();
        jpTLCEditOrDelExistTest = new javax.swing.JPanel();
        jlTLCTestName = new javax.swing.JLabel();
        jtfTLCTestName = new javax.swing.JTextField();
        jbTLCEditTest = new javax.swing.JButton();
        jbTLCDeleteTest = new javax.swing.JButton();
        jpTLCNewTest = new javax.swing.JPanel();
        jlTLCNewTestName = new javax.swing.JLabel();
        jtfTLCNewTestName = new javax.swing.JTextField();
        jbTLCCreateNewTest = new javax.swing.JButton();
        jlTLCUsresTestList = new javax.swing.JLabel();
        jspTLCTestList = new javax.swing.JScrollPane();
        jtTLCTestList = new javax.swing.JTable();
        jspTLCInfo = new javax.swing.JScrollPane();
        jtaTLCInfo = new javax.swing.JTextArea();
        jbTLCReturnToMainMenu = new javax.swing.JButton();
        jpnlCreateAcc = new javax.swing.JPanel();
        jtfCACommunication = new javax.swing.JTextField();
        jtfCAUsername = new javax.swing.JTextField();
        jCASeparator7 = new javax.swing.JSeparator();
        jCASeparator1 = new javax.swing.JSeparator();
        jtfCAName = new javax.swing.JTextField();
        jCASeparator2 = new javax.swing.JSeparator();
        jtfCASurname = new javax.swing.JTextField();
        jCASeparator3 = new javax.swing.JSeparator();
        jtfCAEmail = new javax.swing.JTextField();
        jCASeparator4 = new javax.swing.JSeparator();
        jpfCAPass = new javax.swing.JPasswordField();
        jCASeparator5 = new javax.swing.JSeparator();
        jpfCARetypePass = new javax.swing.JPasswordField();
        jCASeparator6 = new javax.swing.JSeparator();
        bCACreateAccount = new javax.swing.JButton();
        bCALoginMenu = new javax.swing.JButton();
        jpnlForgottenPassword = new javax.swing.JPanel();
        jtfFPCommunication = new javax.swing.JTextField();
        jFPUnderCommunication = new javax.swing.JSeparator();
        jtfFPUsername = new javax.swing.JTextField();
        jFPUnderUsername = new javax.swing.JSeparator();
        jtfFPEmail = new javax.swing.JTextField();
        jFPUnderEmail = new javax.swing.JSeparator();
        jbFPSendEmail = new javax.swing.JButton();
        jbFPLoginMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpnlBg.setBackground(new java.awt.Color(255, 255, 255));
        jpnlBg.setPreferredSize(new java.awt.Dimension(1000, 550));

        jpnlMain.setBackground(new java.awt.Color(255, 255, 255));
        jpnlMain.setPreferredSize(new java.awt.Dimension(1000, 550));
        jpnlMain.setLayout(new java.awt.CardLayout());

        jpnlSignIn.setBackground(new java.awt.Color(255, 255, 255));
        jpnlSignIn.setFocusable(false);
        jpnlSignIn.setPreferredSize(new java.awt.Dimension(1000, 550));

        jllSILogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jllSILogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xyz/reks/gui/user.png"))); // NOI18N
        jllSILogin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jllSILogin.setMaximumSize(new java.awt.Dimension(48, 48));
        jllSILogin.setMinimumSize(new java.awt.Dimension(48, 48));
        jllSILogin.setPreferredSize(new java.awt.Dimension(48, 48));

        jtfSIUsername.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfSIUsername.setForeground(new java.awt.Color(204, 204, 204));
        jtfSIUsername.setText("Username");
        jtfSIUsername.setToolTipText("");
        jtfSIUsername.setBorder(null);
        jtfSIUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfSIUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfSIUsernameFocusLost(evt);
            }
        });
        jtfSIUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSIUsernameActionPerformed(evt);
            }
        });

        jsSISeparator1.setBackground(new java.awt.Color(131, 207, 68));
        jsSISeparator1.setForeground(new java.awt.Color(131, 207, 68));

        jlSIPass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSIPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xyz/reks/gui/password.png"))); // NOI18N
        jlSIPass.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlSIPass.setPreferredSize(new java.awt.Dimension(54, 48));

        jpfSIPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jpfSIPass.setForeground(new java.awt.Color(204, 204, 204));
        jpfSIPass.setText("Password");
        jpfSIPass.setToolTipText("");
        jpfSIPass.setBorder(null);
        jpfSIPass.setPreferredSize(new java.awt.Dimension(44, 25));
        jpfSIPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jpfSIPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpfSIPassFocusLost(evt);
            }
        });
        jpfSIPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfSIPassActionPerformed(evt);
            }
        });
        jpfSIPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jpfSIPassKeyTyped(evt);
            }
        });

        jsSISeparator2.setBackground(new java.awt.Color(131, 207, 68));
        jsSISeparator2.setForeground(new java.awt.Color(131, 207, 68));

        jlSICreaAcc.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jlSICreaAcc.setForeground(new java.awt.Color(51, 51, 51));
        jlSICreaAcc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlSICreaAcc.setText("Create an Account");
        jlSICreaAcc.setMaximumSize(new java.awt.Dimension(50, 20));
        jlSICreaAcc.setMinimumSize(new java.awt.Dimension(50, 20));
        jlSICreaAcc.setPreferredSize(new java.awt.Dimension(50, 20));
        jlSICreaAcc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlSICreaAccMouseClicked(evt);
            }
        });

        jlSIRecAcc.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jlSIRecAcc.setForeground(new java.awt.Color(51, 51, 51));
        jlSIRecAcc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSIRecAcc.setText("Forgot password");
        jlSIRecAcc.setMaximumSize(new java.awt.Dimension(50, 20));
        jlSIRecAcc.setMinimumSize(new java.awt.Dimension(50, 20));
        jlSIRecAcc.setPreferredSize(new java.awt.Dimension(50, 20));
        jlSIRecAcc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlSIRecAccMouseClicked(evt);
            }
        });

        jtfSIError.setEditable(false);
        jtfSIError.setBackground(new java.awt.Color(255, 255, 255));
        jtfSIError.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfSIError.setForeground(new java.awt.Color(255, 153, 153));
        jtfSIError.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfSIError.setBorder(null);
        jtfSIError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSIErrorActionPerformed(evt);
            }
        });

        jbSILogin.setBackground(new java.awt.Color(131, 207, 68));
        jbSILogin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbSILogin.setText("Sign In");
        jbSILogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSILoginActionPerformed(evt);
            }
        });
        jbSILogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbSILoginKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpnlSignInLayout = new javax.swing.GroupLayout(jpnlSignIn);
        jpnlSignIn.setLayout(jpnlSignInLayout);
        jpnlSignInLayout.setHorizontalGroup(
            jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlSignInLayout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addGroup(jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlSIPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jllSILogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtfSIError, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addGroup(jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jpnlSignInLayout.createSequentialGroup()
                                .addComponent(jlSICreaAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlSIRecAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jsSISeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                            .addComponent(jsSISeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                            .addComponent(jpfSIPass, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                            .addComponent(jtfSIUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
                        .addGroup(jpnlSignInLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jbSILogin, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(235, 235, 235))
        );
        jpnlSignInLayout.setVerticalGroup(
            jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlSignInLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jtfSIError, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jllSILogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSIUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsSISeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpnlSignInLayout.createSequentialGroup()
                        .addComponent(jpfSIPass, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsSISeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlSIPass, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSILogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSICreaAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlSIRecAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jpfSIPass.setEchoChar((char)0);

        jpnlMain.add(jpnlSignIn, "card2");

        jpnlLoader.setBackground(new java.awt.Color(255, 255, 255));
        jpnlLoader.setMinimumSize(new java.awt.Dimension(0, 0));
        jpnlLoader.setPreferredSize(new java.awt.Dimension(1000, 550));
        jpnlLoader.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jpnlLoaderFocusGained(evt);
            }
        });
        jpnlLoader.setLayout(new java.awt.GridBagLayout());

        jlLLoadGif.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlLLoadGif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xyz/reks/gui/loading.gif"))); // NOI18N
        jlLLoadGif.setPreferredSize(new java.awt.Dimension(256, 135));
        jpnlLoader.add(jlLLoadGif, new java.awt.GridBagConstraints());

        jlLLoadinginfo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlLLoadinginfo.setForeground(new java.awt.Color(131, 207, 68));
        jlLLoadinginfo.setText("Loading in...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jpnlLoader.add(jlLLoadinginfo, gridBagConstraints);

        jpnlMain.add(jpnlLoader, "card3");

        jpnlMenu.setBackground(new java.awt.Color(255, 255, 255));
        jpnlMenu.setPreferredSize(new java.awt.Dimension(1000, 550));
        jpnlMenu.setLayout(new java.awt.GridBagLayout());

        jbMSelectTest.setBackground(new java.awt.Color(131, 207, 68));
        jbMSelectTest.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbMSelectTest.setText("Select Test");
        jbMSelectTest.setPreferredSize(new java.awt.Dimension(440, 33));
        jbMSelectTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMSelectTestActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        jpnlMenu.add(jbMSelectTest, gridBagConstraints);

        jbMTestCreator.setBackground(new java.awt.Color(131, 207, 68));
        jbMTestCreator.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbMTestCreator.setText("Test Creator");
        jbMTestCreator.setPreferredSize(new java.awt.Dimension(440, 33));
        jbMTestCreator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMTestCreatorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        jpnlMenu.add(jbMTestCreator, gridBagConstraints);

        jbMLogout.setBackground(new java.awt.Color(131, 207, 68));
        jbMLogout.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbMLogout.setText("Logout");
        jbMLogout.setPreferredSize(new java.awt.Dimension(440, 33));
        jbMLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMLogoutActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        jpnlMenu.add(jbMLogout, gridBagConstraints);

        jpnlMain.add(jpnlMenu, "card4");

        jpnlCreateEditTest.setBackground(new java.awt.Color(255, 255, 255));
        jpnlCreateEditTest.setMaximumSize(new java.awt.Dimension(1000, 555));
        jpnlCreateEditTest.setMinimumSize(new java.awt.Dimension(1000, 555));
        jpnlCreateEditTest.setPreferredSize(new java.awt.Dimension(1000, 550));

        jtCETTestContent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 207, 68)));
        jtCETTestContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtCETTestContent.setGridColor(new java.awt.Color(131, 207, 68));
        jtCETTestContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCETTestContentMouseClicked(evt);
            }
        });
        jspCETTestContent.setViewportView(jtCETTestContent);

        jpnlCETTestName.setBackground(new java.awt.Color(255, 255, 255));
        jpnlCETTestName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 207, 68)));
        jpnlCETTestName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jpnlCETTestName.setFocusCycleRoot(true);

        jtfCETSelectedTestName.setEditable(false);

        jlCETSelectedTestName.setText("Selected test name");

        jlCETNewTestName.setText("New test name");

        jbCETChangeTestNAme.setBackground(new java.awt.Color(131, 207, 68));
        jbCETChangeTestNAme.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETChangeTestNAme.setText("Change test name");
        jbCETChangeTestNAme.setPreferredSize(new java.awt.Dimension(200, 33));
        jbCETChangeTestNAme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETChangeTestNAmeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlCETTestNameLayout = new javax.swing.GroupLayout(jpnlCETTestName);
        jpnlCETTestName.setLayout(jpnlCETTestNameLayout);
        jpnlCETTestNameLayout.setHorizontalGroup(
            jpnlCETTestNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCETTestNameLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jpnlCETTestNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbCETChangeTestNAme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpnlCETTestNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfCETNewTestName)
                        .addComponent(jlCETNewTestName)
                        .addComponent(jtfCETSelectedTestName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(jlCETSelectedTestName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jpnlCETTestNameLayout.setVerticalGroup(
            jpnlCETTestNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCETTestNameLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jlCETSelectedTestName)
                .addGap(5, 5, 5)
                .addComponent(jtfCETSelectedTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlCETNewTestName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCETNewTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbCETChangeTestNAme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpnlCETAddEditWord.setBackground(new java.awt.Color(255, 255, 255));
        jpnlCETAddEditWord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 207, 68)));

        jlCETEngWord.setText("English Word");

        jlCETPlWord.setText("Polish Word");

        jbCETAddEditWords.setBackground(new java.awt.Color(131, 207, 68));
        jbCETAddEditWords.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETAddEditWords.setText("Add Words");
        jbCETAddEditWords.setPreferredSize(new java.awt.Dimension(190, 33));
        jbCETAddEditWords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETAddEditWordsActionPerformed(evt);
            }
        });

        jbCETDeleteWords.setBackground(new java.awt.Color(131, 207, 68));
        jbCETDeleteWords.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETDeleteWords.setText("Delete Words");
        jbCETDeleteWords.setPreferredSize(new java.awt.Dimension(190, 33));
        jbCETDeleteWords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETDeleteWordsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlCETAddEditWordLayout = new javax.swing.GroupLayout(jpnlCETAddEditWord);
        jpnlCETAddEditWord.setLayout(jpnlCETAddEditWordLayout);
        jpnlCETAddEditWordLayout.setHorizontalGroup(
            jpnlCETAddEditWordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCETAddEditWordLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jpnlCETAddEditWordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlCETPlWord)
                    .addComponent(jlCETEngWord)
                    .addComponent(jtfCETEngWord, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jtfCETPlWord, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbCETAddEditWords, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbCETDeleteWords, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jpnlCETAddEditWordLayout.setVerticalGroup(
            jpnlCETAddEditWordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCETAddEditWordLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jlCETPlWord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCETPlWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlCETEngWord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCETEngWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbCETAddEditWords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbCETDeleteWords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnlCETMenu.setBackground(new java.awt.Color(255, 255, 255));
        jpnlCETMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 207, 68)));
        jpnlCETMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jpnlCETMenu.setPreferredSize(new java.awt.Dimension(250, 250));

        jbCETSaveTest.setBackground(new java.awt.Color(131, 207, 68));
        jbCETSaveTest.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETSaveTest.setText("Discard changes");
        jbCETSaveTest.setPreferredSize(new java.awt.Dimension(199, 33));
        jbCETSaveTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETSaveTestActionPerformed(evt);
            }
        });

        jbCETReturnToTestList.setBackground(new java.awt.Color(131, 207, 68));
        jbCETReturnToTestList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETReturnToTestList.setText("Save test");
        jbCETReturnToTestList.setPreferredSize(new java.awt.Dimension(199, 33));
        jbCETReturnToTestList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETReturnToTestListActionPerformed(evt);
            }
        });

        jbCETExportTest.setBackground(new java.awt.Color(131, 207, 68));
        jbCETExportTest.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETExportTest.setText("Export test to file");
        jbCETExportTest.setPreferredSize(new java.awt.Dimension(199, 33));
        jbCETExportTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETExportTestActionPerformed(evt);
            }
        });

        jbCETReturnToMainMenu.setBackground(new java.awt.Color(131, 207, 68));
        jbCETReturnToMainMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETReturnToMainMenu.setText("Return to tests list");
        jbCETReturnToMainMenu.setPreferredSize(new java.awt.Dimension(199, 33));
        jbCETReturnToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETReturnToMainMenuActionPerformed(evt);
            }
        });

        jbCETDiscardChg.setBackground(new java.awt.Color(131, 207, 68));
        jbCETDiscardChg.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETDiscardChg.setText("Return to main menu");
        jbCETDiscardChg.setPreferredSize(new java.awt.Dimension(199, 33));
        jbCETDiscardChg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETDiscardChgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlCETMenuLayout = new javax.swing.GroupLayout(jpnlCETMenu);
        jpnlCETMenu.setLayout(jpnlCETMenuLayout);
        jpnlCETMenuLayout.setHorizontalGroup(
            jpnlCETMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCETMenuLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jpnlCETMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbCETSaveTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCETReturnToTestList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCETExportTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCETReturnToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCETDiscardChg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jpnlCETMenuLayout.setVerticalGroup(
            jpnlCETMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCETMenuLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jbCETSaveTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbCETReturnToTestList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbCETExportTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbCETReturnToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jbCETDiscardChg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtaCETInfo.setColumns(20);
        jtaCETInfo.setLineWrap(true);
        jtaCETInfo.setRows(5);
        jtaCETInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240)));
        jspCETInfo.setViewportView(jtaCETInfo);

        jspCETInsertWordsFromFile.setBackground(new java.awt.Color(255, 255, 255));
        jspCETInsertWordsFromFile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 207, 68)));
        jspCETInsertWordsFromFile.setPreferredSize(new java.awt.Dimension(480, 65));

        jrbCETFirstPl.setBackground(new java.awt.Color(255, 255, 255));
        bgChooseLanguageOrderInFile.add(jrbCETFirstPl);
        jrbCETFirstPl.setText(" First Word is Polish");
        jrbCETFirstPl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCETFirstPlActionPerformed(evt);
            }
        });

        jrbCETFirstEng.setBackground(new java.awt.Color(255, 255, 255));
        bgChooseLanguageOrderInFile.add(jrbCETFirstEng);
        jrbCETFirstEng.setText(" First Word is English");

        jbCETInsertWordListFromFile.setBackground(new java.awt.Color(131, 207, 68));
        jbCETInsertWordListFromFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCETInsertWordListFromFile.setText("Insert words from file");
        jbCETInsertWordListFromFile.setPreferredSize(new java.awt.Dimension(199, 33));
        jbCETInsertWordListFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCETInsertWordListFromFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jspCETInsertWordsFromFileLayout = new javax.swing.GroupLayout(jspCETInsertWordsFromFile);
        jspCETInsertWordsFromFile.setLayout(jspCETInsertWordsFromFileLayout);
        jspCETInsertWordsFromFileLayout.setHorizontalGroup(
            jspCETInsertWordsFromFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jspCETInsertWordsFromFileLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jspCETInsertWordsFromFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbCETFirstPl)
                    .addComponent(jrbCETFirstEng))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(jbCETInsertWordListFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jspCETInsertWordsFromFileLayout.setVerticalGroup(
            jspCETInsertWordsFromFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jspCETInsertWordsFromFileLayout.createSequentialGroup()
                .addGroup(jspCETInsertWordsFromFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jspCETInsertWordsFromFileLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jrbCETFirstPl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbCETFirstEng))
                    .addGroup(jspCETInsertWordsFromFileLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jbCETInsertWordListFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpnlCreateEditTestLayout = new javax.swing.GroupLayout(jpnlCreateEditTest);
        jpnlCreateEditTest.setLayout(jpnlCreateEditTestLayout);
        jpnlCreateEditTestLayout.setHorizontalGroup(
            jpnlCreateEditTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCreateEditTestLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jspCETTestContent, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpnlCreateEditTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlCreateEditTestLayout.createSequentialGroup()
                        .addGroup(jpnlCreateEditTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpnlCETAddEditWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpnlCETTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpnlCreateEditTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jspCETInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(jpnlCETMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)))
                    .addComponent(jspCETInsertWordsFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jpnlCreateEditTestLayout.setVerticalGroup(
            jpnlCreateEditTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCreateEditTestLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jpnlCreateEditTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlCreateEditTestLayout.createSequentialGroup()
                        .addGroup(jpnlCreateEditTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpnlCreateEditTestLayout.createSequentialGroup()
                                .addComponent(jspCETInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jpnlCETMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                            .addGroup(jpnlCreateEditTestLayout.createSequentialGroup()
                                .addComponent(jpnlCETTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jpnlCETAddEditWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addComponent(jspCETInsertWordsFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jspCETTestContent, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jpnlMain.add(jpnlCreateEditTest, "card8");

        jpnlChooseTest.setBackground(new java.awt.Color(255, 255, 255));
        jpnlChooseTest.setMaximumSize(new java.awt.Dimension(1000, 555));
        jpnlChooseTest.setMinimumSize(new java.awt.Dimension(1000, 555));
        jpnlChooseTest.setPreferredSize(new java.awt.Dimension(1000, 550));

        jtCTSelectedTestContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jspCTSelectedTestWords.setViewportView(jtCTSelectedTestContent);

        jtfCTTestActiveDate.setEditable(false);
        jtfCTTestActiveDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCTTestActiveDateActionPerformed(evt);
            }
        });

        jlCTTestActiveDate.setText("Test Active Date");

        jlCTSelectedTest.setText("Selected Test");

        jtCTTestList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtCTTestList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCTTestListMouseClicked(evt);
            }
        });
        jspCTTestList.setViewportView(jtCTTestList);

        jlCTTestList.setText("Test List:");

        jlCTTestContent.setText("Test Content:");

        jtfCTTestName.setEditable(false);
        jtfCTTestName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCTTestNameActionPerformed(evt);
            }
        });

        jbCTStartTest.setBackground(new java.awt.Color(131, 207, 68));
        jbCTStartTest.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbCTStartTest.setText("Start Selected Test");
        jbCTStartTest.setPreferredSize(new java.awt.Dimension(200, 33));
        jbCTStartTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCTStartTestActionPerformed(evt);
            }
        });

        jbCTReturnToMainMenu.setBackground(new java.awt.Color(131, 207, 68));
        jbCTReturnToMainMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbCTReturnToMainMenu.setText("Return to Main Menu");
        jbCTReturnToMainMenu.setPreferredSize(new java.awt.Dimension(200, 33));
        jbCTReturnToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCTReturnToMainMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlChooseTestLayout = new javax.swing.GroupLayout(jpnlChooseTest);
        jpnlChooseTest.setLayout(jpnlChooseTestLayout);
        jpnlChooseTestLayout.setHorizontalGroup(
            jpnlChooseTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlChooseTestLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jpnlChooseTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlCTTestList)
                    .addGroup(jpnlChooseTestLayout.createSequentialGroup()
                        .addGroup(jpnlChooseTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlCTTestContent)
                            .addGroup(jpnlChooseTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jspCTSelectedTestWords, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                                .addComponent(jspCTTestList)))
                        .addGap(80, 80, 80)
                        .addGroup(jpnlChooseTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfCTTestActiveDate, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(jlCTTestActiveDate)
                            .addComponent(jlCTSelectedTest)
                            .addComponent(jtfCTTestName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbCTStartTest, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(jbCTReturnToMainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpnlChooseTestLayout.setVerticalGroup(
            jpnlChooseTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlChooseTestLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jlCTTestList)
                .addGroup(jpnlChooseTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlChooseTestLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jspCTTestList, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlCTTestContent)
                        .addGap(5, 5, 5)
                        .addComponent(jspCTSelectedTestWords, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnlChooseTestLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jlCTSelectedTest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCTTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlCTTestActiveDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCTTestActiveDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(jbCTStartTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbCTReturnToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jpnlMain.add(jpnlChooseTest, "card7");

        jpnlTest.setBackground(new java.awt.Color(255, 255, 255));
        jpnlTest.setPreferredSize(new java.awt.Dimension(1000, 550));

        jsTAbove.setBackground(new java.awt.Color(131, 207, 68));
        jsTAbove.setForeground(new java.awt.Color(131, 207, 68));

        jtfTNumOfRecToFin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTNumOfRecToFin.setText("Number of questions to finish:");

        jtfTCountNumOfRecToFin.setEditable(false);
        jtfTCountNumOfRecToFin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTCountNumOfRecToFin.setBorder(null);

        jtfTTimeLeft.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTTimeLeft.setText("Time left for current question:");

        jtfTTimeLeftTimer.setEditable(false);
        jtfTTimeLeftTimer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTTimeLeftTimer.setBorder(null);

        jtfTNumOfRec.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTNumOfRec.setText("Whole number of questions:");

        jtfTCountNumOfRec.setEditable(false);
        jtfTCountNumOfRec.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTCountNumOfRec.setBorder(null);

        jtfTNumOfMist.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTNumOfMist.setText("Number of mistakes:");

        jtfTCountNumOfMist.setEditable(false);
        jtfTCountNumOfMist.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTCountNumOfMist.setBorder(null);

        jtfTTimeSpend.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTTimeSpend.setText("Time spent:");

        jtfTTimeSpendTimer.setEditable(false);
        jtfTTimeSpendTimer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTTimeSpendTimer.setBorder(null);

        jlTPlWord.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jlTPlWord.setForeground(new java.awt.Color(102, 102, 102));
        jlTPlWord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTPlWord.setText("Q:");
        jlTPlWord.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jlTPlWord.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jlTPlWord.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jtfTPlWord.setEditable(false);
        jtfTPlWord.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTPlWord.setForeground(new java.awt.Color(51, 51, 51));
        jtfTPlWord.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfTPlWord.setToolTipText("");
        jtfTPlWord.setBorder(null);
        jtfTPlWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTPlWordActionPerformed(evt);
            }
        });

        jsTUnderEngWord.setBackground(new java.awt.Color(131, 207, 68));
        jsTUnderEngWord.setForeground(new java.awt.Color(131, 207, 68));

        jlTEngWord.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jlTEngWord.setForeground(new java.awt.Color(102, 102, 102));
        jlTEngWord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTEngWord.setText("A:");
        jlTEngWord.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jlTEngWord.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jtfTEngWord.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTEngWord.setForeground(new java.awt.Color(51, 51, 51));
        jtfTEngWord.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfTEngWord.setToolTipText("");
        jtfTEngWord.setBorder(null);
        jtfTEngWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTEngWordActionPerformed(evt);
            }
        });

        jsTUnderPlWord.setBackground(new java.awt.Color(131, 207, 68));
        jsTUnderPlWord.setForeground(new java.awt.Color(131, 207, 68));

        jtfTInfo.setEditable(false);
        jtfTInfo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfTInfo.setForeground(new java.awt.Color(255, 51, 51));
        jtfTInfo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfTInfo.setBorder(null);
        jtfTInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTInfoActionPerformed(evt);
            }
        });

        jbTReturnToMainMenu.setBackground(new java.awt.Color(131, 207, 68));
        jbTReturnToMainMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbTReturnToMainMenu.setText("Return to Main Menu");
        jbTReturnToMainMenu.setPreferredSize(new java.awt.Dimension(200, 33));
        jbTReturnToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTReturnToMainMenuActionPerformed(evt);
            }
        });
        jbTReturnToMainMenu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbTReturnToMainMenuKeyPressed(evt);
            }
        });

        jsTBelow.setBackground(new java.awt.Color(131, 207, 68));
        jsTBelow.setForeground(new java.awt.Color(131, 207, 68));

        javax.swing.GroupLayout jpnlTestLayout = new javax.swing.GroupLayout(jpnlTest);
        jpnlTest.setLayout(jpnlTestLayout);
        jpnlTestLayout.setHorizontalGroup(
            jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jsTBelow)
            .addComponent(jsTAbove)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlTestLayout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlTestLayout.createSequentialGroup()
                        .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfTNumOfRecToFin)
                            .addComponent(jtfTTimeLeft)
                            .addComponent(jtfTNumOfRec)
                            .addComponent(jtfTNumOfMist)
                            .addComponent(jtfTTimeSpend))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfTCountNumOfRecToFin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTTimeLeftTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTCountNumOfRec, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTCountNumOfMist, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTTimeSpendTimer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlTestLayout.createSequentialGroup()
                        .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jlTPlWord, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(jlTEngWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnlTestLayout.createSequentialGroup()
                                .addComponent(jtfTEngWord, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(278, 278, 278))
                            .addGroup(jpnlTestLayout.createSequentialGroup()
                                .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfTInfo)
                                    .addComponent(jsTUnderEngWord, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jsTUnderPlWord, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jtfTPlWord, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(110, 110, 110))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlTestLayout.createSequentialGroup()
                        .addComponent(jbTReturnToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(370, 370, 370))))
        );
        jpnlTestLayout.setVerticalGroup(
            jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlTestLayout.createSequentialGroup()
                .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpnlTestLayout.createSequentialGroup()
                        .addComponent(jsTAbove, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTCountNumOfRecToFin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTNumOfRecToFin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTTimeLeftTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTTimeLeft))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTCountNumOfRec, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTNumOfRec))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTCountNumOfMist, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtfTNumOfMist))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTTimeSpendTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTTimeSpend))
                .addGap(18, 18, 18)
                .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlTPlWord, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTPlWord, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsTUnderEngWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlTEngWord, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTEngWord, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsTUnderPlWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtfTInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(jbTReturnToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jsTBelow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpnlMain.add(jpnlTest, "card5");

        jpnlTestListChg.setBackground(new java.awt.Color(255, 255, 255));
        jpnlTestListChg.setPreferredSize(new java.awt.Dimension(1000, 550));

        jpTLCEditOrDelExistTest.setBackground(new java.awt.Color(255, 255, 255));
        jpTLCEditOrDelExistTest.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit Existing Test", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(131, 207, 68))); // NOI18N

        jlTLCTestName.setText("Selected test name");

        jtfTLCTestName.setEditable(false);

        jbTLCEditTest.setBackground(new java.awt.Color(131, 207, 68));
        jbTLCEditTest.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbTLCEditTest.setText("Edit Selected Test");
        jbTLCEditTest.setPreferredSize(new java.awt.Dimension(200, 33));
        jbTLCEditTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTLCEditTestActionPerformed(evt);
            }
        });

        jbTLCDeleteTest.setBackground(new java.awt.Color(131, 207, 68));
        jbTLCDeleteTest.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbTLCDeleteTest.setText("Delete Test");
        jbTLCDeleteTest.setPreferredSize(new java.awt.Dimension(200, 33));
        jbTLCDeleteTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTLCDeleteTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpTLCEditOrDelExistTestLayout = new javax.swing.GroupLayout(jpTLCEditOrDelExistTest);
        jpTLCEditOrDelExistTest.setLayout(jpTLCEditOrDelExistTestLayout);
        jpTLCEditOrDelExistTestLayout.setHorizontalGroup(
            jpTLCEditOrDelExistTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTLCEditOrDelExistTestLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jpTLCEditOrDelExistTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbTLCDeleteTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbTLCEditTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpTLCEditOrDelExistTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfTLCTestName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlTLCTestName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jpTLCEditOrDelExistTestLayout.setVerticalGroup(
            jpTLCEditOrDelExistTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTLCEditOrDelExistTestLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jlTLCTestName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfTLCTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbTLCEditTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbTLCDeleteTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpTLCNewTest.setBackground(new java.awt.Color(255, 255, 255));
        jpTLCNewTest.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Test", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(131, 207, 68))); // NOI18N

        jlTLCNewTestName.setText("New, unique test name");

        jtfTLCNewTestName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTLCNewTestNameActionPerformed(evt);
            }
        });

        jbTLCCreateNewTest.setBackground(new java.awt.Color(131, 207, 68));
        jbTLCCreateNewTest.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbTLCCreateNewTest.setText("Create New Test");
        jbTLCCreateNewTest.setPreferredSize(new java.awt.Dimension(200, 33));
        jbTLCCreateNewTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTLCCreateNewTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpTLCNewTestLayout = new javax.swing.GroupLayout(jpTLCNewTest);
        jpTLCNewTest.setLayout(jpTLCNewTestLayout);
        jpTLCNewTestLayout.setHorizontalGroup(
            jpTLCNewTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTLCNewTestLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jpTLCNewTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbTLCCreateNewTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpTLCNewTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfTLCNewTestName)
                        .addComponent(jlTLCNewTestName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        jpTLCNewTestLayout.setVerticalGroup(
            jpTLCNewTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTLCNewTestLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jlTLCNewTestName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfTLCNewTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbTLCCreateNewTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlTLCUsresTestList.setText("Users test list:");

        jspTLCTestList.setPreferredSize(new java.awt.Dimension(452, 480));

        jtTLCTestList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtTLCTestList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTLCTestListMouseClicked(evt);
            }
        });
        jspTLCTestList.setViewportView(jtTLCTestList);
        jtTLCTestList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jspTLCInfo.setPreferredSize(new java.awt.Dimension(244, 126));

        jtaTLCInfo.setEditable(false);
        jtaTLCInfo.setColumns(20);
        jtaTLCInfo.setRows(5);
        jtaTLCInfo.setName(""); // NOI18N
        jtaTLCInfo.setPreferredSize(null);
        jspTLCInfo.setViewportView(jtaTLCInfo);

        jbTLCReturnToMainMenu.setBackground(new java.awt.Color(131, 207, 68));
        jbTLCReturnToMainMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbTLCReturnToMainMenu.setText("Return to Main Menu");
        jbTLCReturnToMainMenu.setPreferredSize(new java.awt.Dimension(200, 33));
        jbTLCReturnToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTLCReturnToMainMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlTestListChgLayout = new javax.swing.GroupLayout(jpnlTestListChg);
        jpnlTestListChg.setLayout(jpnlTestListChgLayout);
        jpnlTestListChgLayout.setHorizontalGroup(
            jpnlTestListChgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlTestListChgLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(jpnlTestListChgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTLCUsresTestList)
                    .addGroup(jpnlTestListChgLayout.createSequentialGroup()
                        .addComponent(jspTLCTestList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addGroup(jpnlTestListChgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpTLCEditOrDelExistTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpTLCNewTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnlTestListChgLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jspTLCInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpnlTestListChgLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jbTLCReturnToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jpnlTestListChgLayout.setVerticalGroup(
            jpnlTestListChgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlTestListChgLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jlTLCUsresTestList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlTestListChgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspTLCTestList, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnlTestListChgLayout.createSequentialGroup()
                        .addComponent(jpTLCEditOrDelExistTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jpTLCNewTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jspTLCInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jbTLCReturnToMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jpnlMain.add(jpnlTestListChg, "card9");

        jpnlCreateAcc.setBackground(new java.awt.Color(255, 255, 255));
        jpnlCreateAcc.setPreferredSize(new java.awt.Dimension(1000, 550));

        jtfCACommunication.setEditable(false);
        jtfCACommunication.setBackground(new java.awt.Color(255, 255, 255));
        jtfCACommunication.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfCACommunication.setForeground(new java.awt.Color(51, 51, 51));
        jtfCACommunication.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfCACommunication.setText("Please fill out all required fields below.");
        jtfCACommunication.setToolTipText("");
        jtfCACommunication.setBorder(null);
        jtfCACommunication.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCACommunicationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCACommunicationFocusLost(evt);
            }
        });
        jtfCACommunication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCACommunicationActionPerformed(evt);
            }
        });

        jtfCAUsername.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfCAUsername.setForeground(new java.awt.Color(204, 204, 204));
        jtfCAUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfCAUsername.setText("Username");
        jtfCAUsername.setToolTipText("");
        jtfCAUsername.setBorder(null);
        jtfCAUsername.setPreferredSize(new java.awt.Dimension(45, 25));
        jtfCAUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCAUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCAUsernameFocusLost(evt);
            }
        });
        jtfCAUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCAUsernameActionPerformed(evt);
            }
        });
        jtfCAUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCAUsernameKeyTyped(evt);
            }
        });

        jCASeparator7.setBackground(new java.awt.Color(131, 207, 68));
        jCASeparator7.setForeground(new java.awt.Color(131, 207, 68));

        jCASeparator1.setBackground(new java.awt.Color(131, 207, 68));
        jCASeparator1.setForeground(new java.awt.Color(131, 207, 68));

        jtfCAName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfCAName.setForeground(new java.awt.Color(204, 204, 204));
        jtfCAName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfCAName.setText("Name");
        jtfCAName.setToolTipText("");
        jtfCAName.setBorder(null);
        jtfCAName.setPreferredSize(new java.awt.Dimension(45, 25));
        jtfCAName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCANameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCANameFocusLost(evt);
            }
        });
        jtfCAName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCANameActionPerformed(evt);
            }
        });
        jtfCAName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCANameKeyTyped(evt);
            }
        });

        jCASeparator2.setBackground(new java.awt.Color(131, 207, 68));
        jCASeparator2.setForeground(new java.awt.Color(131, 207, 68));

        jtfCASurname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfCASurname.setForeground(new java.awt.Color(204, 204, 204));
        jtfCASurname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfCASurname.setText("Surname");
        jtfCASurname.setToolTipText("");
        jtfCASurname.setBorder(null);
        jtfCASurname.setPreferredSize(new java.awt.Dimension(45, 25));
        jtfCASurname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCASurnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCASurnameFocusLost(evt);
            }
        });
        jtfCASurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCASurnameActionPerformed(evt);
            }
        });
        jtfCASurname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCASurnameKeyTyped(evt);
            }
        });

        jCASeparator3.setBackground(new java.awt.Color(131, 207, 68));
        jCASeparator3.setForeground(new java.awt.Color(131, 207, 68));

        jtfCAEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfCAEmail.setForeground(new java.awt.Color(204, 204, 204));
        jtfCAEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfCAEmail.setText("E-mail");
        jtfCAEmail.setToolTipText("");
        jtfCAEmail.setBorder(null);
        jtfCAEmail.setPreferredSize(new java.awt.Dimension(45, 25));
        jtfCAEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCAEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCAEmailFocusLost(evt);
            }
        });
        jtfCAEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCAEmailActionPerformed(evt);
            }
        });
        jtfCAEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCAEmailKeyTyped(evt);
            }
        });

        jCASeparator4.setBackground(new java.awt.Color(131, 207, 68));
        jCASeparator4.setForeground(new java.awt.Color(131, 207, 68));

        jpfCAPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jpfCAPass.setForeground(new java.awt.Color(204, 204, 204));
        jpfCAPass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jpfCAPass.setText("Password");
        jpfCAPass.setToolTipText("");
        jpfCAPass.setBorder(null);
        jpfCAPass.setPreferredSize(new java.awt.Dimension(45, 25));
        jpfCAPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jpfCAPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpfCAPassFocusLost(evt);
            }
        });
        jpfCAPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfCAPassActionPerformed(evt);
            }
        });
        jpfCAPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jpfCAPassKeyTyped(evt);
            }
        });

        jCASeparator5.setBackground(new java.awt.Color(131, 207, 68));
        jCASeparator5.setForeground(new java.awt.Color(131, 207, 68));

        jpfCARetypePass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jpfCARetypePass.setForeground(new java.awt.Color(204, 204, 204));
        jpfCARetypePass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jpfCARetypePass.setText("Retype Password");
        jpfCARetypePass.setToolTipText("");
        jpfCARetypePass.setBorder(null);
        jpfCARetypePass.setPreferredSize(new java.awt.Dimension(45, 25));
        jpfCARetypePass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jpfCARetypePassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpfCARetypePassFocusLost(evt);
            }
        });
        jpfCARetypePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfCARetypePassActionPerformed(evt);
            }
        });
        jpfCARetypePass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jpfCARetypePassKeyTyped(evt);
            }
        });
        jpfCARetypePass.setEchoChar((char)0);

        jCASeparator6.setBackground(new java.awt.Color(131, 207, 68));
        jCASeparator6.setForeground(new java.awt.Color(131, 207, 68));

        bCACreateAccount.setBackground(new java.awt.Color(131, 207, 68));
        bCACreateAccount.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bCACreateAccount.setText("Create Account");
        bCACreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCACreateAccountActionPerformed(evt);
            }
        });

        bCALoginMenu.setBackground(new java.awt.Color(131, 207, 68));
        bCALoginMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bCALoginMenu.setText("Return to Main Menu");
        bCALoginMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCALoginMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlCreateAccLayout = new javax.swing.GroupLayout(jpnlCreateAcc);
        jpnlCreateAcc.setLayout(jpnlCreateAccLayout);
        jpnlCreateAccLayout.setHorizontalGroup(
            jpnlCreateAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlCreateAccLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(jpnlCreateAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCASeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCACommunication, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(120, 120, 120))
            .addGroup(jpnlCreateAccLayout.createSequentialGroup()
                .addGroup(jpnlCreateAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlCreateAccLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addGroup(jpnlCreateAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCASeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnlCreateAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jCASeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jCASeparator3)
                                .addComponent(jtfCASurname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfCAUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfCAName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCASeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jtfCAEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCASeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jpfCAPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCASeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jpfCARetypePass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jpnlCreateAccLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(bCACreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnlCreateAccLayout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(bCALoginMenu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlCreateAccLayout.setVerticalGroup(
            jpnlCreateAccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCreateAccLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jtfCACommunication, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCASeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jtfCAUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCASeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jtfCAName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCASeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCASurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCASeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCAEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCASeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpfCAPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCASeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpfCARetypePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCASeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(bCACreateAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bCALoginMenu)
                .addContainerGap())
        );

        jpfCAPass.setEchoChar((char)0);

        jpnlMain.add(jpnlCreateAcc, "card6");

        jpnlForgottenPassword.setBackground(new java.awt.Color(255, 255, 255));
        jpnlForgottenPassword.setPreferredSize(new java.awt.Dimension(1000, 550));

        jtfFPCommunication.setEditable(false);
        jtfFPCommunication.setBackground(new java.awt.Color(255, 255, 255));
        jtfFPCommunication.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfFPCommunication.setForeground(new java.awt.Color(51, 51, 51));
        jtfFPCommunication.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfFPCommunication.setText("Please fill out all required fields below.");
        jtfFPCommunication.setToolTipText("");
        jtfFPCommunication.setBorder(null);
        jtfFPCommunication.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfFPCommunicationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfFPCommunicationFocusLost(evt);
            }
        });
        jtfFPCommunication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFPCommunicationActionPerformed(evt);
            }
        });

        jFPUnderCommunication.setBackground(new java.awt.Color(131, 207, 68));
        jFPUnderCommunication.setForeground(new java.awt.Color(131, 207, 68));

        jtfFPUsername.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfFPUsername.setForeground(new java.awt.Color(204, 204, 204));
        jtfFPUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfFPUsername.setText("Username");
        jtfFPUsername.setToolTipText("");
        jtfFPUsername.setBorder(null);
        jtfFPUsername.setPreferredSize(new java.awt.Dimension(45, 25));
        jtfFPUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfFPUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfFPUsernameFocusLost(evt);
            }
        });
        jtfFPUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFPUsernameActionPerformed(evt);
            }
        });
        jtfFPUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfFPUsernameKeyTyped(evt);
            }
        });

        jFPUnderUsername.setBackground(new java.awt.Color(131, 207, 68));
        jFPUnderUsername.setForeground(new java.awt.Color(131, 207, 68));

        jtfFPEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfFPEmail.setForeground(new java.awt.Color(204, 204, 204));
        jtfFPEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfFPEmail.setText("E-mail");
        jtfFPEmail.setToolTipText("");
        jtfFPEmail.setBorder(null);
        jtfFPEmail.setPreferredSize(new java.awt.Dimension(45, 25));
        jtfFPEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfFPEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfFPEmailFocusLost(evt);
            }
        });
        jtfFPEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFPEmailActionPerformed(evt);
            }
        });
        jtfFPEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfFPEmailKeyTyped(evt);
            }
        });

        jFPUnderEmail.setBackground(new java.awt.Color(131, 207, 68));
        jFPUnderEmail.setForeground(new java.awt.Color(131, 207, 68));

        jbFPSendEmail.setBackground(new java.awt.Color(131, 207, 68));
        jbFPSendEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbFPSendEmail.setText("Send email with new password");
        jbFPSendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFPSendEmailActionPerformed(evt);
            }
        });

        jbFPLoginMenu.setBackground(new java.awt.Color(131, 207, 68));
        jbFPLoginMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jbFPLoginMenu.setText("Return to Main Menu");
        jbFPLoginMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFPLoginMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlForgottenPasswordLayout = new javax.swing.GroupLayout(jpnlForgottenPassword);
        jpnlForgottenPassword.setLayout(jpnlForgottenPasswordLayout);
        jpnlForgottenPasswordLayout.setHorizontalGroup(
            jpnlForgottenPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlForgottenPasswordLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(jpnlForgottenPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jFPUnderCommunication, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFPCommunication, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(120, 120, 120))
            .addGroup(jpnlForgottenPasswordLayout.createSequentialGroup()
                .addGroup(jpnlForgottenPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlForgottenPasswordLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addGroup(jpnlForgottenPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFPUnderUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfFPUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFPUnderEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfFPEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpnlForgottenPasswordLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jbFPSendEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnlForgottenPasswordLayout.createSequentialGroup()
                        .addGap(398, 398, 398)
                        .addComponent(jbFPLoginMenu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlForgottenPasswordLayout.setVerticalGroup(
            jpnlForgottenPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlForgottenPasswordLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jtfFPCommunication, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFPUnderCommunication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jtfFPUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFPUnderUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jtfFPEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFPUnderEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbFPSendEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbFPLoginMenu)
                .addContainerGap())
        );

        jpnlMain.add(jpnlForgottenPassword, "card6");

        javax.swing.GroupLayout jpnlBgLayout = new javax.swing.GroupLayout(jpnlBg);
        jpnlBg.setLayout(jpnlBgLayout);
        jpnlBgLayout.setHorizontalGroup(
            jpnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpnlBgLayout.setVerticalGroup(
            jpnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlBg, javax.swing.GroupLayout.DEFAULT_SIZE, 1023, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlBg, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfTEngWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTEngWordActionPerformed
        if (test.checkUsersAnswer(jtfTEngWord.getText()) & test.countPairsOfWords() > 1) {
            test.removeOnePairOfWords();
            test.shuffleTestContent();
            jtfTPlWord.setText(test.getCurrentQuestion());
            jtfTEngWord.setText("");
            jtfTInfo.setForeground(this.WILLOW_GREEN);
            jtfTInfo.setText("Correct answer");
            jtfTEngWord.requestFocusInWindow();
            jtfTTimeLeftTimer.setText(test.getCurrentSecLeft());
            jtfTCountNumOfRecToFin.setText(Integer.toString(test.getNumberOfPairsToEnd()));
        } else if (test.checkUsersAnswer(jtfTEngWord.getText()) & test.countPairsOfWords() == 1) {
            setEmptyText(jtfTPlWord, jtfTEngWord);
            jtfTInfo.setForeground(this.WILLOW_GREEN);
            jtfTInfo.setText("Test is completed");
            jtfTEngWord.setEditable(false);
            jbTReturnToMainMenu.requestFocusInWindow();
            jtfTCountNumOfRecToFin.setText("0");
            timer.stop();
        } else {
            jtfTInfo.setText("Incorrect answer. correct: " + test.getCurrentAnswer());
            test.resetCurrentSecLeft();
            test.shuffleTestContent();
            jtfTPlWord.setText(test.getCurrentQuestion());
            jtfTEngWord.setText("");
            jtfTInfo.setForeground(this.RED);
            jtfTEngWord.requestFocusInWindow();
            test.addPointToMistakes();
            jtfTCountNumOfMist.setText(Integer.toString(test.getNumberOfMistakes()));
            jtfTTimeLeftTimer.setText(test.getCurrentSecLeft());
        }

    }//GEN-LAST:event_jtfTEngWordActionPerformed

    private void jtfTPlWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTPlWordActionPerformed
    }//GEN-LAST:event_jtfTPlWordActionPerformed

    private void jpnlLoaderFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpnlLoaderFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jpnlLoaderFocusGained

    private void jlSICreaAccMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlSICreaAccMouseClicked
        jtfSIError.setText("");
        jtfSIUsername.setText("Username");
        jpfSIPass.setText("Password");
        setSameForeground(LIGHT_GREY, jtfSIUsername, jpfSIPass);

        jpnlCreateAcc.setVisible(true);
        jpnlSignIn.setVisible(false);
    }//GEN-LAST:event_jlSICreaAccMouseClicked

    private void jpfSIPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpfSIPassFocusLost
        focLostTextFieldFeature(jpfSIPass, "Password");
        if (jpfSIPass.getPassword().equals("Password")) {
            jpfSIPass.setEchoChar((char) 0);
        }
    }//GEN-LAST:event_jpfSIPassFocusLost

    private void jpfSIPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpfSIPassFocusGained
        focGainTextFieldFeature(jpfSIPass, "Password");
        if (!jpfSIPass.getPassword().equals("Password")) {
            jpfSIPass.setEchoChar((char) '\u25cf');
        }
    }//GEN-LAST:event_jpfSIPassFocusGained

    private void jtfSIUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSIUsernameFocusLost
        focLostTextFieldFeature(jtfSIUsername, "Username");
    }//GEN-LAST:event_jtfSIUsernameFocusLost

    private void jtfSIUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSIUsernameFocusGained
        focGainTextFieldFeature(jtfSIUsername, "Username");
    }//GEN-LAST:event_jtfSIUsernameFocusGained

    private void jtfCAUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCAUsernameFocusGained
        focGainTextFieldFeature(jtfCAUsername, "Username");
    }//GEN-LAST:event_jtfCAUsernameFocusGained

    private void jtfCAUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCAUsernameFocusLost
        focLostTextFieldFeature(jtfCAUsername, "Username");
    }//GEN-LAST:event_jtfCAUsernameFocusLost

    private void jpfCARetypePassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpfCARetypePassFocusGained
        focGainTextFieldFeature(jpfCARetypePass, "Retype Password");
        if (!jpfCARetypePass.getPassword().equals("Retype Password")) {
            jpfCARetypePass.setEchoChar((char) '\u25cf');
        }
    }//GEN-LAST:event_jpfCARetypePassFocusGained

    private void jpfCARetypePassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpfCARetypePassFocusLost
        focLostTextFieldFeature(jpfCARetypePass, "Retype Password");
        if (jpfCARetypePass.getPassword().equals("Retype Password")) {
            jpfCARetypePass.setEchoChar((char) 0);
        }
        if (!jpfCARetypePass.getPassword().equals("Retype Password") & (!jpfCAPass.getPassword().equals("Password") & !jpfCAPass.getPassword().equals(jpfCARetypePass.getPassword()))) {
            switch (jtfCACommunication.getText()) {
                case "Wrong e-mail format.":
                    jtfCACommunication.setText("Wrong e-mail format and passwords don't match.");

                    setSameBackground(PINK, jpfCAPass, jpfCARetypePass);
                    break;
                case "Please fill out all required fields below.":
                    jtfCACommunication.setText("The passwords don't match.");
                    setSameBackground(PINK, jtfCACommunication, jpfCAPass, jpfCARetypePass);

            }
        }
    }//GEN-LAST:event_jpfCARetypePassFocusLost

    private void jtfCASurnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCASurnameFocusGained
        focGainTextFieldFeature(jtfCASurname, "Surname");
    }//GEN-LAST:event_jtfCASurnameFocusGained

    private void jtfCASurnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCASurnameFocusLost
        focLostTextFieldFeature(jtfCASurname, "Surname");
    }//GEN-LAST:event_jtfCASurnameFocusLost

    private void jtfCANameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCANameFocusGained
        focGainTextFieldFeature(jtfCAName, "Name");
    }//GEN-LAST:event_jtfCANameFocusGained

    private void jtfCANameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCANameFocusLost
        focLostTextFieldFeature(jtfCAName, "Name");
    }//GEN-LAST:event_jtfCANameFocusLost

    private void jpfCAPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpfCAPassFocusGained
        focGainTextFieldFeature(jpfCAPass, "Password");
        if (!jpfCAPass.getPassword().equals("Password")) {
            jpfCAPass.setEchoChar((char) '\u25cf');
        }
    }//GEN-LAST:event_jpfCAPassFocusGained

    private void jpfCAPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpfCAPassFocusLost
        focLostTextFieldFeature(jpfCAPass, "Password");
        if (jpfCAPass.getPassword().equals("Password")) {
            jpfCAPass.setEchoChar((char) 0);
        }
        if (!jpfCAPass.getPassword().equals("Password") & (!jpfCARetypePass.getPassword().equals("Retype Password") & !jpfCARetypePass.getPassword().equals(jpfCAPass.getPassword()))) {
            switch (jtfCACommunication.getText()) {
                case "Wrong e-mail format.":
                    jtfCACommunication.setText("Wrong e-mail format and passwords don't match.");

                    setSameBackground(PINK, jpfCAPass, jpfCARetypePass);

                    break;
                case "Please fill out all required fields below.":
                    jtfCACommunication.setText("The passwords don't match.");
                    setSameBackground(PINK, jtfCACommunication, jpfCAPass, jpfCARetypePass);
            }
        }
    }//GEN-LAST:event_jpfCAPassFocusLost

    private void jtfCAEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCAEmailFocusGained
        focGainTextFieldFeature(jtfCAEmail, "E-mail");

        if (jtfCAEmail.getForeground().equals(this.LIGHT_GREY)) {
            jtfCAEmail.setForeground(this.GRAY);
        }

        if (jtfCAEmail.getBackground().equals(this.PINK)) {
            jtfCAEmail.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfCAEmailFocusGained

    private void jtfCAEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCAEmailFocusLost
        focLostTextFieldFeature(jtfCAEmail, "E-mail");
        if (!(jtfCAEmail.getText().equals("E-mail") || isValidEmailAddress(jtfCAEmail.getText()))) {
            switch (jtfCACommunication.getText()) {
                case "The passwords don't match.":
                    jtfCACommunication.setText("Wrong e-mail format and passwords don't match.");
                    jtfCAEmail.setBackground(this.PINK);
                    break;
                case "Please fill out all required fields below.":
                    jtfCACommunication.setText("Wrong e-mail format.");
                    setSameBackground(PINK, jtfCACommunication, jtfCAEmail);
            }
        }
    }//GEN-LAST:event_jtfCAEmailFocusLost

    private void jtfCAUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCAUsernameActionPerformed
        jtfCAName.requestFocusInWindow();
    }//GEN-LAST:event_jtfCAUsernameActionPerformed

    private void jtfCACommunicationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCACommunicationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCACommunicationFocusGained

    private void jtfCACommunicationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCACommunicationFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCACommunicationFocusLost

    private void jtfSIUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSIUsernameActionPerformed
        jpfSIPass.requestFocusInWindow();
    }//GEN-LAST:event_jtfSIUsernameActionPerformed

    private void jpfCARetypePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfCARetypePassActionPerformed
        bCACreateAccount.requestFocusInWindow();
    }//GEN-LAST:event_jpfCARetypePassActionPerformed

    private void jtfCACommunicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCACommunicationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCACommunicationActionPerformed

    private void jtfCANameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCANameActionPerformed
        jtfCASurname.requestFocusInWindow();
    }//GEN-LAST:event_jtfCANameActionPerformed

    private void jtfCASurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCASurnameActionPerformed
        jtfCAEmail.requestFocusInWindow();
    }//GEN-LAST:event_jtfCASurnameActionPerformed

    private void jtfCAEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCAEmailActionPerformed
        jpfCAPass.requestFocusInWindow();
    }//GEN-LAST:event_jtfCAEmailActionPerformed

    private void jpfCAPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfCAPassActionPerformed
        jpfCARetypePass.requestFocusInWindow();
    }//GEN-LAST:event_jpfCAPassActionPerformed

    private void jpfSIPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfSIPassActionPerformed
        jbSILogin.requestFocusInWindow();
    }//GEN-LAST:event_jpfSIPassActionPerformed

    private void jtfSIErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSIErrorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfSIErrorActionPerformed

    private void jtfTLCNewTestNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTLCNewTestNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTLCNewTestNameActionPerformed

    private void jtTLCTestListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTLCTestListMouseClicked
        int selectedRowIndexNum = jtTLCTestList.getSelectedRow();
        String selectedTest = (String) jtTLCTestList.getValueAt(selectedRowIndexNum, 0);
        jtfTLCTestName.setText(selectedTest);

    }//GEN-LAST:event_jtTLCTestListMouseClicked

    private void jtCETTestContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCETTestContentMouseClicked
        int selectedRowIndexNum = jtCETTestContent.getSelectedRow();
        jtfCETEngWord.setText((String) jtCETTestContent.getValueAt(selectedRowIndexNum, 0));
        jtfCETPlWord.setText((String) jtCETTestContent.getValueAt(selectedRowIndexNum, 1));
    }//GEN-LAST:event_jtCETTestContentMouseClicked

    private void jtCTTestListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCTTestListMouseClicked
        int selectedRowIndexNum = jtCTTestList.getSelectedRow();
        jtCTSelectedTestContent.setModel(dbStatements.getIndicatedTestsContent((String) jtCTTestList.getValueAt(selectedRowIndexNum, 0)));

        jtfCTTestName.setText((String) jtCTTestList.getValueAt(selectedRowIndexNum, 0));
        jtfCTTestActiveDate.setText((String) jtCTTestList.getValueAt(selectedRowIndexNum, 1));
    }//GEN-LAST:event_jtCTTestListMouseClicked

    private void jtfTInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTInfoActionPerformed

    private void jrbCETFirstPlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCETFirstPlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbCETFirstPlActionPerformed

    private void jbSILoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSILoginActionPerformed
        if (DbAuthentication.authenticateUser(jtfSIUsername.getText(), new String(jpfSIPass.getPassword()))) {
            dbStatements = new DbInstructions(jtfSIUsername.getText());

            jpnlMenu.setVisible(true);
            jpnlSignIn.setVisible(false);

            jtfSIUsername.setText("Username");
            jtfSIUsername.setForeground(this.LIGHT_GREY);
            jpfSIPass.setText("Password");
            jpfSIPass.setForeground(this.LIGHT_GREY);
            jtfSIError.setText("");
        } else if (DbAuthentication.isUsernameExistInDb(jtfSIUsername.getText())) {
            jtfSIError.setText("Incorrect Password");
            jpfSIPass.setText("");
            focLostTextFieldFeature(jpfSIPass, "Password");
            jtfSIUsername.setText("Username");
            focLostTextFieldFeature(jtfSIUsername, "Username");
            jpfSIPass.setEchoChar((char) 0);
        } else {
            jtfSIError.setText("User not exist");
            jpfSIPass.setText("");
            focLostTextFieldFeature(jpfSIPass, "Password");
            jtfSIUsername.setText("Username");
            focLostTextFieldFeature(jtfSIUsername, "Username");
            jpfSIPass.setEchoChar((char) 0);
        }
    }//GEN-LAST:event_jbSILoginActionPerformed

    private void jbSILoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbSILoginKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (DbAuthentication.authenticateUser(jtfSIUsername.getText(), new String(jpfSIPass.getPassword()))) {
                dbStatements = new DbInstructions(jtfSIUsername.getText());
                jpnlMenu.setVisible(true);
                jpnlSignIn.setVisible(false);

                jtfSIUsername.setText("Username");
                jtfSIUsername.setForeground(this.LIGHT_GREY);
                jpfSIPass.setText("Password");
                jpfSIPass.setForeground(this.LIGHT_GREY);
                jtfSIError.setText("");
            } else if (DbAuthentication.isUsernameExistInDb(jtfSIUsername.getText())) {
                jtfSIError.setText("Incorrect Password");
                jpfSIPass.setText("");
                focLostTextFieldFeature(jpfSIPass, "Password");
                jtfSIUsername.setText("Username");
                focLostTextFieldFeature(jtfSIUsername, "Username");
                jpfSIPass.setEchoChar((char) 0);
            } else {
                jtfSIError.setText("User not exist");
                jpfSIPass.setText("");
                focLostTextFieldFeature(jpfSIPass, "Password");
                jtfSIUsername.setText("Username");
                focLostTextFieldFeature(jtfSIUsername, "Username");
                jpfSIPass.setEchoChar((char) 0);
            }
        }
    }//GEN-LAST:event_jbSILoginKeyPressed

    private void jbMSelectTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMSelectTestActionPerformed
        jtCTTestList.setModel(dbStatements.getShortInfoAboutTests());
        jpnlChooseTest.setVisible(true);
        jpnlMenu.setVisible(false);
    }//GEN-LAST:event_jbMSelectTestActionPerformed

    private void jbMTestCreatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMTestCreatorActionPerformed
        jtTLCTestList.setModel(dbStatements.getShortestInfoAboutTests());
        jpnlTestListChg.setVisible(true);
        jpnlMenu.setVisible(false);
    }//GEN-LAST:event_jbMTestCreatorActionPerformed

    private void jbMLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMLogoutActionPerformed
        jpnlSignIn.setVisible(true);
        jpnlMenu.setVisible(false);
    }//GEN-LAST:event_jbMLogoutActionPerformed

    private void bCACreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCACreateAccountActionPerformed
        if (jtfCAUsername.getText().equals("Username")) {
            jtfCAUsername.setBackground(this.PINK);
        }
        if (jtfCAName.getText().equals("Name")) {
            jtfCAName.setBackground(this.PINK);
        }
        if (jtfCASurname.getText().equals("Surname")) {
            jtfCASurname.setBackground(this.PINK);
        }
        if (jtfCAEmail.getText().equals("E-mail")) {
            jtfCAEmail.setBackground(this.PINK);
        }
        if (jpfCAPass.getPassword().equals("Password")) {
            jpfCAPass.setBackground(this.PINK);
        }
        if (jpfCARetypePass.getPassword().equals("Retype Password")) {
            jpfCARetypePass.setBackground(this.PINK);
        }
        if (!jpfCARetypePass.getPassword().equals(jpfCAPass.getPassword()) & (!jpfCAPass.getPassword().equals("Password") | !jpfCARetypePass.getPassword().equals("Retype Password"))) {
            setSameBackground(PINK, jpfCAPass, jpfCARetypePass);
        }

        // if any field has red background then
        if (!hasSameBackground(PINK, jtfCAUsername, jtfCAName, jtfCASurname, jtfCAEmail, jpfCAPass, jpfCARetypePass) || DbAuthentication.isUsernameExistInDb(jtfCAUsername.getText())) {

            DbAuthentication.createUser(jtfCAUsername.getText(), jtfCAName.getText(), jtfCASurname.getText(), jtfCAEmail.getText(), new String(jpfCAPass.getPassword()));

            setSameForeground(LIGHT_GREY, jtfCAUsername, jtfCAName, jtfCASurname, jtfCAEmail, jpfCAPass, jpfCARetypePass);
            jtfCAUsername.setText("Username");
            jtfCAName.setText("Name");
            jtfCASurname.setText("Surname");
            jtfCAEmail.setText("E-mail");
            jpfCAPass.setText("Password");
            jpfCARetypePass.setText("Retype Password");

            jpnlSignIn.setVisible(true);
            jpnlCreateAcc.setVisible(false);
        }


    }//GEN-LAST:event_bCACreateAccountActionPerformed

    private void bCALoginMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCALoginMenuActionPerformed
        if (hasSameBackground(PINK, jtfCAUsername, jtfCAName, jtfCASurname, jtfCAEmail, jpfCAPass, jpfCARetypePass)) {
            setSameBackground(WHITE, jtfCAUsername, jtfCAName, jtfCASurname, jtfCAEmail, jpfCAPass, jpfCARetypePass);
        }

        setSameForeground(PINK, jtfCAUsername, jtfCAName, jtfCASurname, jtfCAEmail, jpfCAPass, jpfCARetypePass);

        jtfCAUsername.setText("Username");
        jtfCAName.setText("Name");
        jtfCASurname.setText("Surname");
        jtfCAEmail.setText("E-mail");
        jpfCAPass.setText("Password");
        jpfCARetypePass.setText("Retype Password");

        jpnlSignIn.setVisible(true);
        jpnlCreateAcc.setVisible(false);
    }//GEN-LAST:event_bCALoginMenuActionPerformed

    private void jtfFPCommunicationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFPCommunicationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFPCommunicationFocusGained

    private void jtfFPCommunicationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFPCommunicationFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFPCommunicationFocusLost

    private void jtfFPCommunicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFPCommunicationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFPCommunicationActionPerformed

    private void jtfFPUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFPUsernameFocusGained
        focGainTextFieldFeature(jtfFPUsername, "Username");
    }//GEN-LAST:event_jtfFPUsernameFocusGained

    private void jtfFPUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFPUsernameFocusLost
        focLostTextFieldFeature(jtfFPUsername, "Username");
    }//GEN-LAST:event_jtfFPUsernameFocusLost

    private void jtfFPUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFPUsernameActionPerformed
        jtfFPEmail.requestFocusInWindow();
    }//GEN-LAST:event_jtfFPUsernameActionPerformed

    private void jtfFPEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFPEmailFocusGained
        focGainTextFieldFeature(jtfFPEmail, "E-mail");

        if (jtfFPEmail.getForeground().equals(this.LIGHT_GREY)) {
            jtfFPEmail.setForeground(this.GRAY);
        }

        if (jtfFPEmail.getBackground().equals(this.PINK)) {
            jtfFPEmail.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfFPEmailFocusGained

    private void jtfFPEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFPEmailFocusLost
        focLostTextFieldFeature(jtfFPEmail, "E-mail");
        if (!(jtfFPEmail.getText().equals("E-mail") || isValidEmailAddress(jtfFPEmail.getText()))) {
            jtfFPCommunication.setText("Wrong e-mail format.");

            jtfFPCommunication.setForeground(this.PINK);
            jtfFPEmail.setBackground(this.PINK);
        }
    }//GEN-LAST:event_jtfFPEmailFocusLost

    private void jtfFPEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFPEmailActionPerformed
        jbFPLoginMenu.requestFocusInWindow();
    }//GEN-LAST:event_jtfFPEmailActionPerformed

    private void jbFPSendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFPSendEmailActionPerformed
        if (jtfFPUsername.getText().equals("Username")) {
            jtfFPUsername.setBackground(this.PINK);
        }

        if (jtfFPEmail.getText().equals("E-mail")) {
            jtfFPEmail.setBackground(this.PINK);
        }
        // if any field has red background then
        if (!(jtfFPUsername.getBackground().equals(this.PINK) || jtfFPEmail.getBackground().equals(this.PINK)
                || DbAuthentication.isUsernameExistInDb(jtfFPUsername.getText()))) {

            jtfFPUsername.setText("Username");
            jtfFPUsername.setForeground(this.LIGHT_GREY);
            jtfFPEmail.setText("E-mail");
            jtfFPEmail.setForeground(this.LIGHT_GREY);

            jpnlSignIn.setVisible(true);
            jpnlForgottenPassword.setVisible(false);
        }
    }//GEN-LAST:event_jbFPSendEmailActionPerformed

    private void jbFPLoginMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFPLoginMenuActionPerformed
        if (jtfFPUsername.getBackground().equals(this.PINK));
        jtfFPUsername.setBackground(this.WHITE);

        if (jtfFPEmail.getBackground().equals(this.PINK));
        jtfFPEmail.setBackground(this.WHITE);

        jtfFPUsername.setText("Username");
        jtfFPUsername.setForeground(this.LIGHT_GREY);

        jtfFPEmail.setText("E-mail");
        jtfFPEmail.setForeground(this.LIGHT_GREY);

        jpnlSignIn.setVisible(true);
        jpnlForgottenPassword.setVisible(false);
    }//GEN-LAST:event_jbFPLoginMenuActionPerformed

    private void jtfFPUsernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFPUsernameKeyTyped
        if (jtfFPUsername.getBackground().equals(this.PINK)) {
            jtfFPUsername.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfFPUsernameKeyTyped

    private void jtfFPEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFPEmailKeyTyped
        if (jtfFPEmail.getText().equals("") || jtfFPEmail.getText().equals("E-mail") || isValidEmailAddress(jtfFPEmail.getText())) {
            jtfFPEmail.setBackground(this.WHITE);
            if (jtfFPCommunication.getText().equals("Wrong e-mail format.")) {
                jtfFPCommunication.setText("Please fill out all required fields below.");
                jtfFPCommunication.setForeground(this.DARK_GRAY);
            }
        }
        if (jtfFPEmail.getText().equals("E-mail")) {
            jtfFPEmail.setText("");
        }
        if (jtfFPEmail.getBackground().equals(this.PINK) & jtfFPEmail.getText().equals("E-mail")) {
            jtfFPEmail.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfFPEmailKeyTyped

    private void jlSIRecAccMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlSIRecAccMouseClicked
        jtfSIError.setText("");
        jtfSIUsername.setText("Username");
        jtfSIUsername.setForeground(this.LIGHT_GREY);
        jpfSIPass.setText("Password");
        jpfSIPass.setForeground(this.LIGHT_GREY);
        jpnlForgottenPassword.setVisible(true);
        jpnlSignIn.setVisible(false);

    }//GEN-LAST:event_jlSIRecAccMouseClicked

    private void jtfCAUsernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCAUsernameKeyTyped
        if (jtfCAUsername.getBackground().equals(this.PINK)) {
            jtfCAUsername.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfCAUsernameKeyTyped

    private void jtfCANameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCANameKeyTyped
        if (jtfCAName.getBackground().equals(this.PINK)) {
            jtfCAName.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfCANameKeyTyped

    private void jtfCAEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCAEmailKeyTyped
        if (jtfCAEmail.getBackground().equals(this.PINK)) {
            jtfCAEmail.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfCAEmailKeyTyped

    private void jpfCAPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpfCAPassKeyTyped
        if ((jpfCARetypePass.getPassword().equals("Retype Password") & (jpfCAPass.getPassword().equals("") || jpfCAPass.getPassword().equals("Password")) & !(jtfCACommunication.getText().equals("Please fill out all required fields below."))) ^ jpfCARetypePass.getPassword().equals(jpfCAPass.getPassword())) {
            setSameBackground(this.WHITE, jpfCAPass, jpfCARetypePass);

            if (jtfCACommunication.getText().equals("The passwords don't match.")) {
                jtfCACommunication.setText("Please fill out all required fields below.");
                jtfCACommunication.setForeground(this.DARK_GRAY);
            } else if (jtfCACommunication.getText().equals("Wrong e-mail format and passwords don't match.")) {
                jtfCACommunication.setText("Wrong e-mail format.");
            }
        }
        if (jpfCAPass.getPassword().equals("Password")) {
            jpfCAPass.setText("");
        }
        if (jpfCAPass.getPassword().equals("") & jpfCAPass.getBackground().equals(this.PINK)) {
            setSameBackground(this.WHITE, jpfCAPass, jpfCARetypePass);

            if (jtfCACommunication.getText().equals("The passwords don't match.")) {
                jtfCACommunication.setText("Please fill out all required fields below.");
                jtfCACommunication.setForeground(this.DARK_GRAY);
            } else if (jtfCACommunication.getText().equals("Wrong e-mail format and passwords don't match.")) {
                jtfCACommunication.setText("Wrong e-mail format.");
            }
        }
    }//GEN-LAST:event_jpfCAPassKeyTyped

    private void jpfCARetypePassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpfCARetypePassKeyTyped
        if ((jpfCAPass.getPassword().equals("Password") & (jpfCARetypePass.getPassword().equals("") || jpfCARetypePass.getPassword().equals("Retype Password")) & !(jtfCACommunication.getText().equals("Please fill out all required fields below."))) ^ jpfCAPass.getPassword().equals(jpfCARetypePass.getPassword())) {
            setSameBackground(this.WHITE, jpfCAPass, jpfCARetypePass);
            if (jtfCACommunication.getText().equals("The passwords don't match.")) {
                jtfCACommunication.setText("Please fill out all required fields below.");
                jtfCACommunication.setForeground(this.DARK_GRAY);
            } else if (jtfCACommunication.getText().equals("Wrong e-mail format and passwords don't match.")) {
                jtfCACommunication.setText("Wrong e-mail format.");
            }
        }
        if (jpfCARetypePass.getPassword().equals("Retype Password")) {
            jpfCARetypePass.setText("");
        }
        if (jpfCARetypePass.getPassword().equals("") & jpfCARetypePass.getBackground().equals(this.PINK)) {
            setSameBackground(this.WHITE, jpfCAPass, jpfCARetypePass);
            if (jtfCACommunication.getText().equals("The passwords don't match.")) {
                jtfCACommunication.setText("Please fill out all required fields below.");
                jtfCACommunication.setForeground(this.DARK_GRAY);
            } else if (jtfCACommunication.getText().equals("Wrong e-mail format and passwords don't match.")) {
                jtfCACommunication.setText("Wrong e-mail format.");
            }
        }
    }//GEN-LAST:event_jpfCARetypePassKeyTyped

    private void jtfCASurnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCASurnameKeyTyped
        if (jtfCASurname.getBackground().equals(this.PINK)) {
            jtfCASurname.setBackground(this.WHITE);
        }
    }//GEN-LAST:event_jtfCASurnameKeyTyped

    private void jpfSIPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpfSIPassKeyTyped
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (DbAuthentication.authenticateUser(jtfSIUsername.getText(), new String(jpfSIPass.getPassword()))) {

                jpnlMenu.setVisible(true);
                jpnlSignIn.setVisible(false);

                jtfSIUsername.setText("Username");
                jtfSIUsername.setForeground(this.LIGHT_GREY);
                jpfSIPass.setText("Password");
                jpfSIPass.setForeground(this.LIGHT_GREY);
                jtfSIError.setText("");
            } else if (DbAuthentication.isUsernameExistInDb(jtfSIUsername.getText())) {
                jtfSIError.setText("Incorrect Password");
                jpfSIPass.setText("");
                focLostTextFieldFeature(jpfSIPass, "Password");
                jtfSIUsername.setText("Username");
                focLostTextFieldFeature(jtfSIUsername, "Username");
                jpfSIPass.setEchoChar((char) 0);
            } else {
                jtfSIError.setText("User not exist");
                jpfSIPass.setText("");
                focLostTextFieldFeature(jpfSIPass, "Password");
                jtfSIUsername.setText("Username");
                focLostTextFieldFeature(jtfSIUsername, "Username");
                jpfSIPass.setEchoChar((char) 0);
            }
        }
    }//GEN-LAST:event_jpfSIPassKeyTyped

    private void jbCETChangeTestNAmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETChangeTestNAmeActionPerformed
        try {
            dbStatements.chgSelectedTestName(jtfCETSelectedTestName.getText(), jtfCETNewTestName.getText());
            jtfCETSelectedTestName.setText(jtfCETNewTestName.getText());
            jtfCETNewTestName.setText("");
            jtaCETInfo.setText("Test name is changed.");

        } catch (Exception e) {
            System.out.println("bCETChangeTestNAmeActionPerformed" + e.getMessage());
            jtaCETInfo.setText("Illegal action.");
        }
    }//GEN-LAST:event_jbCETChangeTestNAmeActionPerformed

    private void jbCETAddEditWordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETAddEditWordsActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtCETTestContent.getModel();
        if (existsInJTableColumn(model, 0, jtfCETEngWord.getText())) {
            if (existsInJTableColumn(model, 1, jtfCETPlWord.getText())) {
                jtaCETInfo.setText("Error: This pair of words exists in test.");
            } else {
                if (!jtfCETEngWord.getText().equals("") || !jtfCETPlWord.getText().equals("")) {
                    model.addRow(new Object[]{jtfCETPlWord.getText(), jtfCETEngWord.getText()});
                }
                jtaCETInfo.setText("Pair of words added, but english word exists in test.");
            }
        } else if (!existsInJTableColumn(model, 0, jtfCETEngWord.getText())) {
            if (existsInJTableColumn(model, 1, jtfCETPlWord.getText())) {
                if (!jtfCETEngWord.getText().equals("") || !jtfCETPlWord.getText().equals("")) {
                    model.addRow(new Object[]{jtfCETPlWord.getText(), jtfCETEngWord.getText()});
                }
                jtaCETInfo.setText("Pair of words added, but polish word exists in test.");
            } else {
                jtaCETInfo.setText("Pair of words added.");
                if (!jtfCETEngWord.getText().equals("") || !jtfCETPlWord.getText().equals("")) {
                    model.addRow(new Object[]{jtfCETPlWord.getText(), jtfCETEngWord.getText()});
                }
            }
        }
    }//GEN-LAST:event_jbCETAddEditWordsActionPerformed

    private void jbCETDeleteWordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETDeleteWordsActionPerformed
        String engWord = jtfCETEngWord.getText().trim();
        String plWord = jtfCETPlWord.getText().trim();
        DefaultTableModel table = (DefaultTableModel) jtCETTestContent.getModel();
        for (int i = 0; i < table.getRowCount(); i++) {
            String firstColumnString = table.getValueAt(i, 0).toString().trim();
            String secondColumnString = table.getValueAt(i, 1).toString().trim();

            if (firstColumnString.equals(engWord) & secondColumnString.equals(plWord)) {
                table.removeRow(i);
            }
        }

        int rowsCount = jtCETTestContent.getRowCount();
        if (rowsCount > 0) {
            jtCETTestContent.getSelectionModel().setSelectionInterval(rowsCount - 1, rowsCount - 1);
            jtfCETEngWord.setText((String) jtCETTestContent.getValueAt(rowsCount - 1, 0));
            jtfCETPlWord.setText((String) jtCETTestContent.getValueAt(rowsCount - 1, 1));
        } else {
            setEmptyText(jtfCETEngWord, jtfCETPlWord);
        }
    }//GEN-LAST:event_jbCETDeleteWordsActionPerformed

    private void jbCETSaveTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETSaveTestActionPerformed
        jtCETTestContent.setModel(dbStatements.getIndicatedTestsContent(jtfCETSelectedTestName.getText()));
        setEmptyText(jtfCETEngWord, jtfCETPlWord, jtfCETNewTestName);
        jtaCETInfo.setText("Data changes discarded");
    }//GEN-LAST:event_jbCETSaveTestActionPerformed

    private void jbCETReturnToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETReturnToMainMenuActionPerformed
        jtTLCTestList.setModel(dbStatements.getShortestInfoAboutTests());
        jpnlTestListChg.setVisible(true);
        jpnlCreateEditTest.setVisible(false);
        setEmptyText(jtfCETEngWord, jtfCETPlWord, jtfCETNewTestName, jtfCETSelectedTestName, jtaCETInfo);
    }//GEN-LAST:event_jbCETReturnToMainMenuActionPerformed

    private void jbCETInsertWordListFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETInsertWordListFromFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        File f = fileChooser.getSelectedFile();
        //String filename = f.getAbsolutePath();
        try {
            BufferedReader br = new BufferedReader(new FileReader(f));
            Object[] tableLines = br.lines().toArray();
            DefaultTableModel model = (DefaultTableModel) jtCETTestContent.getModel();

            // extratct data from lines
            // set data to jtable model
            if (jrbCETFirstPl.isSelected()) {
                for (Object tableLine : tableLines) {
                    String line = tableLine.toString().trim();
                    String[] dataRow = line.split(" - ");
                    model.addRow(dataRow);
                    jtaCETInfo.setText("Data added from file");
                }
            } else if (jrbCETFirstEng.isSelected()) {
                for (Object tableLine : tableLines) {
                    String line = tableLine.toString().trim();
                    String[] dataRow = line.split(" - ");
                    String adjuvant = dataRow[0];
                    dataRow[0] = dataRow[1];
                    dataRow[1] = adjuvant;
                    model.addRow(dataRow);
                    jtaCETInfo.setText("Data added from file");
                }
            } else {
                jtaCETInfo.setText("Select proper radiobutton");
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jbCETInsertWordListFromFileActionPerformed

    private void jbCETReturnToTestListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETReturnToTestListActionPerformed
        dbStatements.deleteTestContent(jtfCETSelectedTestName.getText());
        int nRow = jtCETTestContent.getRowCount();
        for (int i = 0; i < nRow; i++) {
            try {
                dbStatements.insertContentIntoTest(jtfCETSelectedTestName.getText(), jtCETTestContent.getValueAt(i, 0).toString(), jtCETTestContent.getValueAt(i, 1).toString());
            } catch (Exception ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jtaCETInfo.setText("Test saved.");

    }//GEN-LAST:event_jbCETReturnToTestListActionPerformed

    private void jbCETExportTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETExportTestActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save a File");
        fileChooser.setFileFilter(new FileTypeFilter(".txt", "Text file"));
        fileChooser.showSaveDialog(null);
        //File f = new File(SaveAs.getSelectedFile() + ".txt");
        File f = fileChooser.getSelectedFile();

        try (FileWriter fw = new FileWriter(f.getAbsoluteFile() + ".txt");
                BufferedWriter bw = new BufferedWriter(fw);) {
            int count = 1;

            for (int i = 0; i < jtCETTestContent.getRowCount(); i++) {
                for (int j = 0; j < jtCETTestContent.getColumnCount(); j++) {

                    if (!(count % 2 == 0)) {

                        bw.write(jtCETTestContent.getModel().getValueAt(i, j) + " - ");
                    } else {
                        bw.write(jtCETTestContent.getModel().getValueAt(i, j) + "\n");
                    }
                    System.out.println("count poza if: " + count);
                    count++;
                }
            }
            jtaCETInfo.setText("File saved ");

        } catch (Exception e) {
            System.out.println("bCETExportTestActionPerformed" + e.getMessage());
        }
    }//GEN-LAST:event_jbCETExportTestActionPerformed

    private void jbCETDiscardChgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCETDiscardChgActionPerformed
        jpnlMenu.setVisible(true);
        jpnlCreateEditTest.setVisible(false);

        setEmptyText(jtfCETEngWord, jtfCETPlWord, jtfCETNewTestName, jtfCETSelectedTestName);
    }//GEN-LAST:event_jbCETDiscardChgActionPerformed

    private void jbTReturnToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTReturnToMainMenuActionPerformed
        if (jtfTCountNumOfRecToFin.getText().equals("0")) {
            try {
                dbStatements.updateTestsScore(jtfCTTestName.getText(), jtfTCountNumOfMist.getText());
            } catch (Exception ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        test = null;

        setEmptyText(jtfCTTestName, jtfTInfo, jtfTEngWord, jtfTPlWord, jtfTCountNumOfRec, jtfTCountNumOfMist, jtfTCountNumOfRecToFin);
        jpnlMenu.setVisible(true);
        jpnlTest.setVisible(false);
        jtfTEngWord.setEditable(true);
        if (timer.isRunning()) {
            timer.stop();
        }
    }//GEN-LAST:event_jbTReturnToMainMenuActionPerformed

    private void jbTReturnToMainMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbTReturnToMainMenuKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jtfTCountNumOfRecToFin.getText().equals("0")) {
                try {
                    dbStatements.updateTestsScore(jtfCTTestName.getText(), jtfTCountNumOfMist.getText());
                } catch (Exception ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            test = null;

            setEmptyText(jtfCTTestName, jtfTInfo, jtfTEngWord, jtfTPlWord, jtfTCountNumOfRec, jtfTCountNumOfMist, jtfTCountNumOfRecToFin);
            jpnlMenu.setVisible(true);
            jpnlTest.setVisible(false);
            jtfTEngWord.setEditable(true);
            if (timer.isRunning()) {
                timer.stop();
            }
        }
    }//GEN-LAST:event_jbTReturnToMainMenuKeyPressed

    private void jbTLCDeleteTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTLCDeleteTestActionPerformed
        if (!jtfTLCTestName.getText().equals("")) {
            try {
                dbStatements.deleteTest(jtfTLCTestName.getText());
                jtfTLCTestName.setText("");
                jtTLCTestList.setModel(dbStatements.getFullInfoAboutTests());
                jtaCETInfo.setText("Test deleted.");

            } catch (Exception e) {
                System.out.println("bCALoginMenu11ActionPerformed" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jbTLCDeleteTestActionPerformed

    private void jbTLCEditTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTLCEditTestActionPerformed
        if (!jtfTLCTestName.getText().equals("")) {

            jtCETTestContent.setModel(dbStatements.getIndicatedTestsContent(jtfTLCTestName.getText()));
            jtfCETSelectedTestName.setText(jtfTLCTestName.getText());

            jrbCETFirstPl.setSelected(true);
            jpnlCreateEditTest.setVisible(true);
            jtTLCTestList.setModel(new DefaultTableModel());
            setEmptyText(jtfTLCTestName, jtfTLCNewTestName, jtaCETInfo);
            jpnlTestListChg.setVisible(false);
        }
    }//GEN-LAST:event_jbTLCEditTestActionPerformed

    private void jbTLCCreateNewTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTLCCreateNewTestActionPerformed
        if (!jtfTLCNewTestName.getText().equals("") && !jtfTLCNewTestName.getText().endsWith("_temporary_table")) {
            try {
                dbStatements.createNewTest(jtfTLCNewTestName.getText());
                jtfCETSelectedTestName.setText(jtfTLCNewTestName.getText());

                //String pushTmpTestConent = "SELECT * FROM " + user + "_" + jtfTLCNewTestName.getText() + "_temporary_table;";
                jtCETTestContent.setModel(dbStatements.getIndicatedTestsContent(jtfTLCNewTestName.getText()));
                jtfCETSelectedTestName.setText(jtfTLCNewTestName.getText());

                jrbCETFirstPl.setSelected(true);
                setEmptyText(jtfTLCNewTestName, jtfTLCTestName, jtaCETInfo);
                jpnlCreateEditTest.setVisible(true);
                jpnlTestListChg.setVisible(false);

            } catch (Exception e) {
                System.out.println("bCALoginMenu13ActionPerformed" + e.getMessage());
            }
        } else if (jtfTLCNewTestName.getText().equals("")) {
            jtaTLCInfo.setText("please fill the test name");
        } else if (jtfTLCNewTestName.getText().endsWith("_temporary_table")) {
            jtaTLCInfo.setText("Change test name");
        }
    }//GEN-LAST:event_jbTLCCreateNewTestActionPerformed

    private void jbTLCReturnToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTLCReturnToMainMenuActionPerformed
        jpnlMenu.setVisible(true);
        jtTLCTestList.setModel(new DefaultTableModel());
        setEmptyText(jtfTLCNewTestName, jtfTLCTestName, jtaCETInfo);
        jpnlTestListChg.setVisible(false);
    }//GEN-LAST:event_jbTLCReturnToMainMenuActionPerformed

    private void jbCTReturnToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCTReturnToMainMenuActionPerformed
        //jtfCTBestScore.setText("");
        setEmptyText(jtfCTTestName, jtfCTTestActiveDate);

        jtCTTestList.setModel(new DefaultTableModel());
        jtCTSelectedTestContent.setModel(new DefaultTableModel());
        jpnlMenu.setVisible(true);
        jpnlChooseTest.setVisible(false);
    }//GEN-LAST:event_jbCTReturnToMainMenuActionPerformed

    private void jtfCTTestNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCTTestNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCTTestNameActionPerformed

    private void jtfCTTestActiveDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCTTestActiveDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCTTestActiveDateActionPerformed

    private void jbCTStartTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCTStartTestActionPerformed
        test = new TestEntity(dbStatements.getTestListArrayList(jtfCTTestName.getText()));
        timer = new Timer(1000, taskPerformer);

        jtfTPlWord.setText(test.getOnePair().getPrimalWord());
        jpnlTest.setVisible(true);
        jpnlChooseTest.setVisible(false);
        jtfTEngWord.requestFocusInWindow();
        jtfTCountNumOfRec.setText(Integer.toString(test.countPairsOfWords()));
        jtfTCountNumOfRecToFin.setText(Integer.toString(test.countPairsOfWords()));
        jtfTCountNumOfMist.setText(Integer.toString(test.getNumberOfMistakes()));
        jtfTTimeSpendTimer.setText(test.getSpentTime());
        jtfTTimeLeftTimer.setText(test.getCurrentSecLeft());
        timer.start();

        //jtfCTBestScore.setText("");
        jtfCTTestActiveDate.setText("");
        jtCTTestList.setModel(new DefaultTableModel());
        jtCTSelectedTestContent.setModel(new DefaultTableModel());
    }//GEN-LAST:event_jbCTStartTestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);

            }
        });
    }

    private boolean isValidEmailAddress(String email) {
        String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
        java.util.regex.Matcher m = p.matcher(email);
        return m.matches();
    }

    private void focGainTextFieldFeature(JTextField fc, String defaultWord) {
        if (fc.getText().equals(defaultWord)) {
            fc.setText("");
            if (fc.getForeground().equals(this.LIGHT_GREY)) {
                fc.setForeground(this.GRAY);
            }
        }
    }

    private void focLostTextFieldFeature(JTextField fc, String defaultWord) {
        if (fc.getText().equals("") | fc.getText().equals(defaultWord)) {
            fc.setForeground(this.LIGHT_GREY);
        }
        if (fc.getText().equals("")) {
            fc.setText(defaultWord);
        }
    }

    public boolean existsInJTableColumn(DefaultTableModel table, int columnId, Object entry) {
        boolean result = false;
        String entryString = entry.toString().trim();
        for (int i = 0; i < table.getRowCount(); i++) {
            String s = table.getValueAt(i, columnId).toString().trim();
            if (entryString.equals(s)) {
                result = true;
            }
        }
        return result;
    }

    ActionListener taskPerformer = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (Integer.parseInt(jtfTTimeLeftTimer.getText()) > 0) {
                test.currentSecLeftMinusSecond();
                test.addSecToSpentTime();
                jtfTTimeLeftTimer.setText(test.getCurrentSecLeft());
                jtfTTimeSpendTimer.setText(test.getSpentTime());
            } else {
                jtfTInfo.setText("Time's up! Faster! Correct answer: " + test.getCurrentAnswer());
                test.resetCurrentSecLeft();
                test.shuffleTestContent();
                jtfTPlWord.setText(test.getCurrentQuestion());
                jtfTEngWord.setText("");
                jtfTInfo.setForeground(RED);
                jtfTEngWord.requestFocusInWindow();
                test.addPointToMistakes();
                jtfTCountNumOfMist.setText(Integer.toString(test.getNumberOfMistakes()));
                jtfTTimeLeftTimer.setText(test.getCurrentSecLeft());
            }
        }
    };

    private <T extends JComponent> boolean hasSameBackground(Color color, T... components) {
        for (T component : components) {
            if (!component.getBackground().equals(color)) {
                return false;
            }
        }
        return true;
    }

    private <T extends JComponent> void setSameBackground(Color color, T... components) {
        for (T component : components) {
            component.setBackground(color);
        }
    }

    private <T extends JComponent> boolean hasSameForeground(Color color, T... components) {
        for (T component : components) {
            if (!component.getForeground().equals(color)) {
                return false;
            }
        }
        return true;
    }

    private <T extends JComponent> void setSameForeground(Color color, T... components) {
        for (T component : components) {
            component.setForeground(color);
        }
    }

    private <T extends JTextComponent> void setEmptyText(T... components) {
        for (T component : components) {
            component.setText("");
        }
    }

    public String getText() {
        return jtfTTimeLeftTimer.getText();
    }

    public String getTextFromJtfCACommunication() {
        return jtfCACommunication.getText();
    }

    public String getTextFromJtfCAEmail() {
        return jtfCAEmail.getText();
    }

    public String getTextFromJtfCAName() {
        return jtfCAName.getText();
    }

    public String getTextFromJtfCASurname() {
        return jtfCASurname.getText();
    }

    public String getTextFromJtfCAUsername() {
        return jtfCAUsername.getText();
    }

    public String getTextFromJtfCETEngWord() {
        return jtfCETEngWord.getText();
    }

    public String getTextFromJtfCETNewTestName() {
        return jtfCETNewTestName.getText();
    }

    public String getTextFromJtfCETPlWord() {
        return jtfCETPlWord.getText();
    }

    public String getTextFromJtfCETSelectedTestName() {
        return jtfCETSelectedTestName.getText();
    }

    public String getTextFromJtfCTTestActiveDate() {
        return jtfCTTestActiveDate.getText();
    }

    public String getTextFromJtfCTTestName() {
        return jtfCTTestName.getText();
    }

    public String getTextFromJtfFPCommunication() {
        return jtfFPCommunication.getText();
    }

    public String getTextFromJtfFPEmail() {
        return jtfFPEmail.getText();
    }

    public String getTextFromJtfFPUsername() {
        return jtfFPUsername.getText();
    }

    public String getTextFromJtfSIError() {
        return jtfSIError.getText();
    }

    public String getTextFromJtfSIUsername() {
        return jtfSIUsername.getText();
    }

    public String getTextFromJtfTCountNumOfMist() {
        return jtfTCountNumOfMist.getText();
    }

    public String getTextFromJtfTCountNumOfRec() {
        return jtfTCountNumOfRec.getText();
    }

    public String getTextFromJtfTCountNumOfRecToFin() {
        return jtfTCountNumOfRecToFin.getText();
    }

    public String getTextFromJtfTEngWord() {
        return jtfTEngWord.getText();
    }

    public String getTextFromJtfTInfo() {
        return jtfTInfo.getText();
    }

    public String getTextFromJtfTLCNewTestName() {
        return jtfTLCNewTestName.getText();
    }

    public String getTextFromJtfTLCTestName() {
        return jtfTLCTestName.getText();
    }

    public String getTextFromJtfTPlWord() {
        return jtfTPlWord.getText();
    }

    public String getTextFromJtfTTimeLeftTimer() {
        return jtfTTimeLeftTimer.getText();
    }

    public String getTextFromJtfTTimeSpendTimer() {
        return jtfTTimeSpendTimer.getText();
    }

    public void setTextInJtfCACommunication(String text) {
        jtfCACommunication.setText(text);
    }

    public void setTextInJtfCAEmail(String text) {
        jtfCAEmail.setText(text);
    }

    public void setTextInJtfCAName(String text) {
        jtfCAName.setText(text);
    }

    public void setTextInJtfCASurname(String text) {
        jtfCASurname.setText(text);
    }

    public void setTextInJtfCAUsername(String text) {
        jtfCAUsername.setText(text);
    }

    public void setTextInJtfCETEngWord(String text) {
        jtfCETEngWord.setText(text);
    }

    public void setTextInJtfCETNewTestName(String text) {
        jtfCETNewTestName.setText(text);
    }

    public void setTextInJtfCETPlWord(String text) {
        jtfCETPlWord.setText(text);
    }

    public void setTextInJtfCETSelectedTestName(String text) {
        jtfCETSelectedTestName.setText(text);
    }

    public void setTextInJtfCTTestActiveDate(String text) {
        jtfCTTestActiveDate.setText(text);
    }

    public void setTextInJtfCTTestName(String text) {
        jtfCTTestName.setText(text);
    }

    public void setTextInJtfFPCommunication(String text) {
        jtfFPCommunication.setText(text);
    }

    public void setTextInJtfFPEmail(String text) {
        jtfFPEmail.setText(text);
    }

    public void setTextInJtfFPUsername(String text) {
        jtfFPUsername.setText(text);
    }

    public void setTextInJtfSIError(String text) {
        jtfSIError.setText(text);
    }

    public void setTextInJtfSIUsername(String text) {
        jtfSIUsername.setText(text);
    }

    public void setTextInJtfTCountNumOfMist(String text) {
        jtfTCountNumOfMist.setText(text);
    }

    public void setTextInJtfTCountNumOfRec(String text) {
        jtfTCountNumOfRec.setText(text);
    }

    public void setTextInJtfTCountNumOfRecToFin(String text) {
        jtfTCountNumOfRecToFin.setText(text);
    }

    public void setTextInJtfTEngWord(String text) {
        jtfTEngWord.setText(text);
    }

    public void setTextInJtfTInfo(String text) {
        jtfTInfo.setText(text);
    }

    public void setTextInJtfTLCNewTestName(String text) {
        jtfTLCNewTestName.setText(text);
    }

    public void setTextInJtfTLCTestName(String text) {
        jtfTLCTestName.setText(text);
    }

    public void setTextInJtfTPlWord(String text) {
        jtfTPlWord.setText(text);
    }

    public void setTextInJtfTTimeLeftTimer(String text) {
        jtfTTimeLeftTimer.setText(text);
    }

    public void setTextInJtfTTimeSpendTimer(String text) {
        jtfTTimeSpendTimer.setText(text);
    }

    public void setBackgroundInJtfCACommunication(Color color) {
        jtfCACommunication.setBackground(color);
    }

    public void setBackgroundInJtfCAEmail(Color color) {
        jtfCAEmail.setBackground(color);
    }

    public void setBackgroundInJtfCAName(Color color) {
        jtfCAName.setBackground(color);
    }

    public void setBackgroundInJtfCASurname(Color color) {
        jtfCASurname.setBackground(color);
    }

    public void setBackgroundInJtfCAUsername(Color color) {
        jtfCAUsername.setBackground(color);
    }

    public void setBackgroundInJtfCETEngWord(Color color) {
        jtfCETEngWord.setBackground(color);
    }

    public void setBackgroundInJtfCETNewTestName(Color color) {
        jtfCETNewTestName.setBackground(color);
    }

    public void setBackgroundInJtfCETPlWord(Color color) {
        jtfCETPlWord.setBackground(color);
    }

    public void setBackgroundInJtfCETSelectedTestName(Color color) {
        jtfCETSelectedTestName.setBackground(color);
    }

    public void setBackgroundInJtfCTTestActiveDate(Color color) {
        jtfCTTestActiveDate.setBackground(color);
    }

    public void setBackgroundInJtfCTTestName(Color color) {
        jtfCTTestName.setBackground(color);
    }

    public void setBackgroundInJtfFPCommunication(Color color) {
        jtfFPCommunication.setBackground(color);
    }

    public void setBackgroundInJtfFPEmail(Color color) {
        jtfFPEmail.setBackground(color);
    }

    public void setBackgroundInJtfFPUsername(Color color) {
        jtfFPUsername.setBackground(color);
    }

    public void setBackgroundInJtfSIError(Color color) {
        jtfSIError.setBackground(color);
    }

    public void setBackgroundInJtfSIUsername(Color color) {
        jtfSIUsername.setBackground(color);
    }

    public void setBackgroundInJtfTCountNumOfMist(Color color) {
        jtfTCountNumOfMist.setBackground(color);
    }

    public void setBackgroundInJtfTCountNumOfRec(Color color) {
        jtfTCountNumOfRec.setBackground(color);
    }

    public void setBackgroundInJtfTCountNumOfRecToFin(Color color) {
        jtfTCountNumOfRecToFin.setBackground(color);
    }

    public void setBackgroundInJtfTEngWord(Color color) {
        jtfTEngWord.setBackground(color);
    }

    public void setBackgroundInJtfTInfo(Color color) {
        jtfTInfo.setBackground(color);
    }

    public void setBackgroundInJtfTLCNewTestName(Color color) {
        jtfTLCNewTestName.setBackground(color);
    }

    public void setBackgroundInJtfTLCTestName(Color color) {
        jtfTLCTestName.setBackground(color);
    }

    public void setBackgroundInJtfTPlWord(Color color) {
        jtfTPlWord.setBackground(color);
    }

    public void setBackgroundInJtfTTimeLeftTimer(Color color) {
        jtfTTimeLeftTimer.setBackground(color);
    }

    public void setBackgroundInJtfTTimeSpendTimer(Color color) {
        jtfTTimeSpendTimer.setBackground(color);
    }
    
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCACreateAccount;
    private javax.swing.JButton bCALoginMenu;
    private javax.swing.ButtonGroup bgChooseLanguageOrderInFile;
    private javax.swing.JSeparator jCASeparator1;
    private javax.swing.JSeparator jCASeparator2;
    private javax.swing.JSeparator jCASeparator3;
    private javax.swing.JSeparator jCASeparator4;
    private javax.swing.JSeparator jCASeparator5;
    private javax.swing.JSeparator jCASeparator6;
    private javax.swing.JSeparator jCASeparator7;
    private javax.swing.JSeparator jFPUnderCommunication;
    private javax.swing.JSeparator jFPUnderEmail;
    private javax.swing.JSeparator jFPUnderUsername;
    private javax.swing.JButton jbCETAddEditWords;
    private javax.swing.JButton jbCETChangeTestNAme;
    private javax.swing.JButton jbCETDeleteWords;
    private javax.swing.JButton jbCETDiscardChg;
    private javax.swing.JButton jbCETExportTest;
    private javax.swing.JButton jbCETInsertWordListFromFile;
    private javax.swing.JButton jbCETReturnToMainMenu;
    private javax.swing.JButton jbCETReturnToTestList;
    private javax.swing.JButton jbCETSaveTest;
    private javax.swing.JButton jbCTReturnToMainMenu;
    private javax.swing.JButton jbCTStartTest;
    private javax.swing.JButton jbFPLoginMenu;
    private javax.swing.JButton jbFPSendEmail;
    private javax.swing.JButton jbMLogout;
    private javax.swing.JButton jbMSelectTest;
    private javax.swing.JButton jbMTestCreator;
    private javax.swing.JButton jbSILogin;
    private javax.swing.JButton jbTLCCreateNewTest;
    private javax.swing.JButton jbTLCDeleteTest;
    private javax.swing.JButton jbTLCEditTest;
    private javax.swing.JButton jbTLCReturnToMainMenu;
    private javax.swing.JButton jbTReturnToMainMenu;
    private javax.swing.JLabel jlCETEngWord;
    private javax.swing.JLabel jlCETNewTestName;
    private javax.swing.JLabel jlCETPlWord;
    private javax.swing.JLabel jlCETSelectedTestName;
    private javax.swing.JLabel jlCTSelectedTest;
    private javax.swing.JLabel jlCTTestActiveDate;
    private javax.swing.JLabel jlCTTestContent;
    private javax.swing.JLabel jlCTTestList;
    private javax.swing.JLabel jlLLoadGif;
    private javax.swing.JLabel jlLLoadinginfo;
    private javax.swing.JLabel jlSICreaAcc;
    private javax.swing.JLabel jlSIPass;
    private javax.swing.JLabel jlSIRecAcc;
    private javax.swing.JLabel jlTEngWord;
    private javax.swing.JLabel jlTLCNewTestName;
    private javax.swing.JLabel jlTLCTestName;
    private javax.swing.JLabel jlTLCUsresTestList;
    private javax.swing.JLabel jlTPlWord;
    private javax.swing.JLabel jllSILogin;
    private javax.swing.JPanel jpTLCEditOrDelExistTest;
    private javax.swing.JPanel jpTLCNewTest;
    private javax.swing.JPasswordField jpfCAPass;
    private javax.swing.JPasswordField jpfCARetypePass;
    private javax.swing.JPasswordField jpfSIPass;
    private javax.swing.JPanel jpnlBg;
    private javax.swing.JPanel jpnlCETAddEditWord;
    private javax.swing.JPanel jpnlCETMenu;
    private javax.swing.JPanel jpnlCETTestName;
    private javax.swing.JPanel jpnlChooseTest;
    private javax.swing.JPanel jpnlCreateAcc;
    private javax.swing.JPanel jpnlCreateEditTest;
    private javax.swing.JPanel jpnlForgottenPassword;
    private javax.swing.JPanel jpnlLoader;
    private javax.swing.JPanel jpnlMain;
    private javax.swing.JPanel jpnlMenu;
    private javax.swing.JPanel jpnlSignIn;
    private javax.swing.JPanel jpnlTest;
    private javax.swing.JPanel jpnlTestListChg;
    private javax.swing.JRadioButton jrbCETFirstEng;
    private javax.swing.JRadioButton jrbCETFirstPl;
    private javax.swing.JSeparator jsSISeparator1;
    private javax.swing.JSeparator jsSISeparator2;
    private javax.swing.JSeparator jsTAbove;
    private javax.swing.JSeparator jsTBelow;
    private javax.swing.JSeparator jsTUnderEngWord;
    private javax.swing.JSeparator jsTUnderPlWord;
    private javax.swing.JScrollPane jspCETInfo;
    private javax.swing.JPanel jspCETInsertWordsFromFile;
    private javax.swing.JScrollPane jspCETTestContent;
    private javax.swing.JScrollPane jspCTSelectedTestWords;
    private javax.swing.JScrollPane jspCTTestList;
    private javax.swing.JScrollPane jspTLCInfo;
    private javax.swing.JScrollPane jspTLCTestList;
    private javax.swing.JTable jtCETTestContent;
    private javax.swing.JTable jtCTSelectedTestContent;
    private javax.swing.JTable jtCTTestList;
    private javax.swing.JTable jtTLCTestList;
    private javax.swing.JTextArea jtaCETInfo;
    private javax.swing.JTextArea jtaTLCInfo;
    private javax.swing.JTextField jtfCACommunication;
    private javax.swing.JTextField jtfCAEmail;
    private javax.swing.JTextField jtfCAName;
    private javax.swing.JTextField jtfCASurname;
    private javax.swing.JTextField jtfCAUsername;
    private javax.swing.JTextField jtfCETEngWord;
    private javax.swing.JTextField jtfCETNewTestName;
    private javax.swing.JTextField jtfCETPlWord;
    private javax.swing.JTextField jtfCETSelectedTestName;
    private javax.swing.JTextField jtfCTTestActiveDate;
    private javax.swing.JTextField jtfCTTestName;
    private javax.swing.JTextField jtfFPCommunication;
    private javax.swing.JTextField jtfFPEmail;
    private javax.swing.JTextField jtfFPUsername;
    private javax.swing.JTextField jtfSIError;
    private javax.swing.JTextField jtfSIUsername;
    private javax.swing.JTextField jtfTCountNumOfMist;
    private javax.swing.JTextField jtfTCountNumOfRec;
    private javax.swing.JTextField jtfTCountNumOfRecToFin;
    private javax.swing.JTextField jtfTEngWord;
    private javax.swing.JTextField jtfTInfo;
    private javax.swing.JTextField jtfTLCNewTestName;
    private javax.swing.JTextField jtfTLCTestName;
    private javax.swing.JLabel jtfTNumOfMist;
    private javax.swing.JLabel jtfTNumOfRec;
    private javax.swing.JLabel jtfTNumOfRecToFin;
    private javax.swing.JTextField jtfTPlWord;
    private javax.swing.JLabel jtfTTimeLeft;
    private javax.swing.JTextField jtfTTimeLeftTimer;
    private javax.swing.JLabel jtfTTimeSpend;
    private javax.swing.JTextField jtfTTimeSpendTimer;
    // End of variables declaration//GEN-END:variables
}
